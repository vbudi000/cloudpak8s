(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{"013z":function(e,t,a){"use strict";a("KKXr"),a("pIFo");var n=a("pOBw"),c=a("q1tI"),i=a.n(c),o=a("NmYn"),l=a.n(o),r=a("OKom"),b=a("k4MR"),m=a("TSYQ"),p=a.n(m),s=a("QH2O"),d=a("qKvR"),g=function(e){var t,a=e.title,n=e.tabs,c=void 0===n?[]:n;return Object(d.b)("div",{className:p()(s.pageHeader,(t={},t[s.withTabs]=c.length,t))},Object(d.b)("div",{className:"bx--grid"},Object(d.b)("div",{className:"bx--row"},Object(d.b)("div",{className:"bx--col-lg-12"},Object(d.b)("h1",{id:"page-title",className:s.text},a)))))},j=a("pEPl"),O=a("BAC9"),u=function(e){var t=e.relativePagePath,a=e.repository,n=j.data.site.siteMetadata.repository,c=a||n,i=c.baseUrl,o=c.subDirectory,l=i+"/edit/"+c.branch+o+"/src/pages"+t;return i?Object(d.b)("div",{className:"bx--row "+O.row},Object(d.b)("div",{className:"bx--col"},Object(d.b)("a",{className:O.link,href:l},"Edit this page on GitHub"))):null},h=a("FCXl"),y=(a("Oyvg"),a("Wbzz")),N=a("I8xM");var f=function(e){var t,a;function n(){return e.apply(this,arguments)||this}return a=e,(t=n).prototype=Object.create(a.prototype),t.prototype.constructor=t,t.__proto__=a,n.prototype.render=function(){var e=this.props,t=e.tabs,a=e.slug,n=a.split("/").filter(Boolean).slice(-1)[0],c=t.map((function(e){var t,c=l()(e,{lower:!0}),i=c===n,o=new RegExp(n+"(?!-)"),r=a.replace(o,c);return Object(d.b)("li",{key:e,className:p()((t={},t[N.selectedItem]=i,t),N.listItem)},Object(d.b)(y.Link,{className:N.link,to:""+r},e))}));return Object(d.b)("div",{className:N.tabsContainer},Object(d.b)("div",{className:"bx--grid"},Object(d.b)("div",{className:"bx--row"},Object(d.b)("div",{className:"bx--col-lg-12 bx--col-no-gutter"},Object(d.b)("nav",null,Object(d.b)("ul",{className:N.list},c))))))},n}(i.a.Component),v=a("MjG9");t.a=function(e){var t=e.pageContext,a=e.children,c=e.location,i=e.Title,o=t.frontmatter,m=void 0===o?{}:o,p=t.relativePagePath,s=t.titleType,j=m.tabs,O=m.title,y=m.theme,N=m.description,C=m.keywords,w=n.data.site.pathPrefix,k=w?c.pathname.replace(w,""):c.pathname,P=j?k.split("/").filter(Boolean).slice(-1)[0]||l()(j[0],{lower:!0}):"";return Object(d.b)(b.a,{tabs:j,homepage:!1,theme:y,pageTitle:O,pageDescription:N,pageKeywords:C,titleType:s},Object(d.b)(g,{title:i?Object(d.b)(i,null):O,label:"label",tabs:j}),j&&Object(d.b)(f,{slug:k,tabs:j,currentTab:P}),Object(d.b)(v.a,{padded:!0},a,Object(d.b)(u,{relativePagePath:p})),Object(d.b)(h.a,{pageContext:t,location:c,slug:k,tabs:j,currentTab:P}),Object(d.b)(r.a,null))}},IEc2:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return o})),a.d(t,"default",(function(){return s}));a("91GP"),a("rGqo"),a("yt8O"),a("Btvt"),a("RW0V"),a("q1tI");var n=a("7ljp"),c=a("013z");a("qKvR");function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}var o={},l=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(n.b)("div",t)}},r=l("AnchorLinks"),b=l("AnchorLink"),m={_frontmatter:o},p=c.a;function s(e){var t=e.components,a=function(e,t){if(null==e)return{};var a,n,c={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(c[a]=e[a]);return c}(e,["components"]);return Object(n.b)(p,i({},m,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h2",null,"Introduction"),Object(n.b)("p",null,"In this section, we describe how to define and review\npolicy definitions and how to see\nthe compliance state of managed clusters."),Object(n.b)(r,{mdxType:"AnchorLinks"},Object(n.b)(b,{mdxType:"AnchorLink"},"Create Simple Policy"),Object(n.b)(b,{mdxType:"AnchorLink"},"Namespace Policy"),Object(n.b)(b,{mdxType:"AnchorLink"},"Network Policy"),Object(n.b)(b,{mdxType:"AnchorLink"},"Pod must exist in a given namespace Policy"),Object(n.b)(b,{mdxType:"AnchorLink"},"Limit memory range for a namespace Policy"),Object(n.b)(b,{mdxType:"AnchorLink"},"Mutation Policy")),Object(n.b)("h3",null,"Create Simple Policy"),Object(n.b)("p",null,"Let’s create a new policy."),Object(n.b)("p",null,"Open your MCM Web Console."),Object(n.b)("p",null,"Navigate to ",Object(n.b)("strong",{parentName:"p"},"Menu -> Govern risk -> Policies"),".\nThis view displays the policies that have been\ncreated and the dashboard of policy compliance for\neach cluster."),Object(n.b)("p",null,"   ",Object(n.b)("img",i({parentName:"p"},{src:"/assets/img/cp4mcm/PolicyCreate.png",alt:"Image"}))),Object(n.b)("p",null,"Click on the ",Object(n.b)("strong",{parentName:"p"},"Create policy")," button."),Object(n.b)("p",null,"   ",Object(n.b)("img",i({parentName:"p"},{src:"/assets/img/cp4mcm/cp4mcm_2.png",alt:"Image"}))),Object(n.b)("p",null,"Fill in the values as specified in the table below:"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",i({parentName:"tr"},{align:"center"}),"Field Name"),Object(n.b)("th",i({parentName:"tr"},{align:"left"}),"Value"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"center"}),"Name"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"policy-namespace")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"center"}),"Namespace"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: Namespace-must have namespace ‘prod’ Note: You will modify the name prod to k8demo. Selecting this will provide a template to have custom namespace policy definition")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"center"}),"Specifications"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: “Namespace”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"center"}),"Cluster Binding"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose name: “local-cluster”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"center"}),"Standards"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: “FISMA”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"center"}),"Categories"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: “SystemAndInformationIntegrity”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"center"}),"Controls"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: “Mutation Advisor”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"center"}),"Enforce if Supported"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Leave as is")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"center"}),"Disable Policy"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Leave as is")))),Object(n.b)("p",null,"In the ",Object(n.b)("strong",{parentName:"p"},"yaml file section"),", on the right,\nchange ",Object(n.b)("strong",{parentName:"p"},"prod")," to ",Object(n.b)("strong",{parentName:"p"},"k8demo"),"."),Object(n.b)("p",null,"Changing the namespace will change the\n",Object(n.b)("inlineCode",{parentName:"p"},"Policy Specifications")," to ",Object(n.b)("inlineCode",{parentName:"p"},"Custom Specifications")," as\nshown below. Notice that the policy is set to\n“",Object(n.b)("strong",{parentName:"p"},"inform"),"” rather than “",Object(n.b)("strong",{parentName:"p"},"enforce"),"”."),Object(n.b)("p",null,"   ",Object(n.b)("img",i({parentName:"p"},{src:"/assets/img/cp4mcm/clip_image001.png",alt:"Image"}))),Object(n.b)("p",null,"   ",Object(n.b)("img",i({parentName:"p"},{src:"/assets/img/cp4mcm/clip_image002.png",alt:"Image"}))),Object(n.b)("p",null,"Click the button ",Object(n.b)("strong",{parentName:"p"},"Create")," to create your new policy."),Object(n.b)("p",null,"If you are not redirected automatically navigate\nto ",Object(n.b)("strong",{parentName:"p"},"Menu -> Govern risk")," to return to the\nDashboard."),Object(n.b)("p",null,"In few seconds, the policy controller will check if\nthe namespace ",Object(n.b)("strong",{parentName:"p"},"k8demo")," is present and provide\ninformation regarding the current compliance of the\npolicies."),Object(n.b)("p",null,"Remember, you didn’t ",Object(n.b)("strong",{parentName:"p"},"enforce")," this policy.\nInstead we specified ",Object(n.b)("strong",{parentName:"p"},"inform.")," As such, the\nGovernance and risk view displays a policy\nviolation in our cluster, as illustrated below."),Object(n.b)("p",null,"   ",Object(n.b)("img",i({parentName:"p"},{src:"/assets/img/cp4mcm/clip_image004.png",alt:"Image"}))),Object(n.b)("p",null,"Use the ",Object(n.b)("strong",{parentName:"p"},"Cluster Violations")," link\n",Object(n.b)("img",i({parentName:"p"},{src:"/assets/img/cp4mcm/clip_image005.png",alt:"Image"}))," to\nfind which cluster is violating the policy."),Object(n.b)("p",null,"In this example,\nthe ",Object(n.b)("strong",{parentName:"p"},"local-cluster")," cluster is in violation of\nthe policy which requires a namespace called\n“k8demo” to exist."),Object(n.b)("p",null,"The ",Object(n.b)("strong",{parentName:"p"},"local-cluster")," cluster is our cluster, and\nthe same cluster that verified “k8sdemo” namespace\ndoes not exist. Hence it shows that there is no\nnamespace “k8demo” in the cluster."),Object(n.b)("img",{src:"/assets/img/cp4mcm/clip_image006.png",alt:"Image"}),Object(n.b)("p",null,"Verify that the “k8demo” namespace still does not exist."),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-shell"}),"oc get projects\n")),Object(n.b)("p",null,"There should NOT be a namespace named k8demo\nlisted, which indicates the policy did not ENFORCE\nit to be created."),Object(n.b)("p",null,"Change the “policy-namespace” policy to be enforced."),Object(n.b)("p",null,"When this policy is in “",Object(n.b)("strong",{parentName:"p"},"enforce"),"” mode, the\nnamespace will automatically be created if it does\nnot exist, thereby forcing the cluster into\ncompliance."),Object(n.b)("p",null,"a.  In the ",Object(n.b)("strong",{parentName:"p"},"policies")," view, select\n",Object(n.b)("strong",{parentName:"p"},"POLICY VIOLATIONS")),Object(n.b)("img",{src:"/assets/img/cp4mcm/clip_image008.png",alt:"Image"}),Object(n.b)("p",null,"b.  Then, select the policy named ",Object(n.b)("strong",{parentName:"p"},"policy-namespace"),"\nand go to ",Object(n.b)("strong",{parentName:"p"},"YAML")," view"),Object(n.b)("p",null,"c.   Click on the\n",Object(n.b)("img",i({parentName:"p"},{src:"/assets/img/cp4mcm/clip_image009.png",alt:"Image"})),"\nbutton to go into edit mode."),Object(n.b)("p",null,"d.  Change the value of\n",Object(n.b)("strong",{parentName:"p"},"remediationAction: inform")," to\n",Object(n.b)("strong",{parentName:"p"},"remediationAction: enforce"),"."),Object(n.b)("p",null,"e.  Click the ",Object(n.b)("img",i({parentName:"p"},{src:"/assets/img/cp4mcm/clip_image010.png",alt:"Image"})),"\nbutton to submit the change."),Object(n.b)("img",{src:"/assets/img/cp4mcm/clip_image011.png",alt:"Image"}),Object(n.b)("p",null,"Select the ",Object(n.b)("strong",{parentName:"p"},"policy-namespace")," link. A few seconds\nlater, the policy violation will have gone away."),Object(n.b)("img",{src:"/assets/img/cp4mcm/clip_image012.png",alt:"Image"}),Object(n.b)("p",null,"You also can validate the same from the\n",Object(n.b)("strong",{parentName:"p"},"Violations")," view."),Object(n.b)("p",null,"Run the command below command and ensure that the “k8demo”\nnamespace has been created in the cluster."),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-shell"}),"oc get project  | grep k8demo\n")),Object(n.b)("p",null,"!",Object(n.b)("img",i({parentName:"p"},{src:"/assets/img/cp4mcm/clip_image014.png",alt:"Image"}))),Object(n.b)("p",null,"Try deleting the namespace and see how it is re-created\nautomatically."),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-shell"}),"oc delete project  k8demo\n")),Object(n.b)("h3",null,"Namespace Policy"),Object(n.b)("p",null,"This policy will check the Cluster Selector, and verify if a\nnamespace named “policy-namespace-k8demo” exists. If the\n“Enforce if supported” parameter is “true”, the namespace will be\nautomatically created on the selected cluster. If “false” then\na violation/compliance of the policy will be reported on the\ndashboard."),Object(n.b)("p",null,"The policy controller will check if the namespace “k8demo” is\npresent and provides information regarding the current\ncompliance of the policies."),Object(n.b)("p",null,"Create policy by setting the following values:"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",i({parentName:"tr"},{align:"left"}),"Field Name"),Object(n.b)("th",i({parentName:"tr"},{align:"left"}),"Value"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Name"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"policy-namespace")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Namespace"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: Namespace-must have namespace ‘prod’ Note: You will modify the name prod to k8demo. Selecting this will provide a template to have custom namespace policy definition")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Specifications"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: “Namespace”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Cluster Binding"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose name: “local-cluster”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Standards"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: “NIST-CSF”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Categories"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: “SystemAndInformationIntegrity”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Controls"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: “Mutation Advisor”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Enforce if Supported"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Leave as is")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Disable Policy"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Leave as is")))),Object(n.b)("img",{src:"/assets/img/cp4mcm/prodnamespace.png",alt:"Image"}),Object(n.b)("p",null,"Here is the YAML that this generates."),Object(n.b)("img",{src:"/assets/img/cp4mcm/prodnamespaceyaml.png",alt:"Image"}),Object(n.b)("p",null,"As we have set this policy to “enforce”, this will create a\n“prod” namespace on our targeted clusters."),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-shell"}),"oc get namespace | grep -i prod\n")),Object(n.b)("p",null,"Create some more policies and then explore the console that\nis used to give a high level view of the cluster compliance\nwith your defined Policies."),Object(n.b)("p",null,"Start with a high level view of the cluster policy compliance."),Object(n.b)("img",{src:"/assets/img/cp4mcm/PolicySummary.png",alt:"Image"}),Object(n.b)("p",null,"Then by ",Object(n.b)("inlineCode",{parentName:"p"},"category")," look at which clusters are found to be\nnot compliant with the named policies."),Object(n.b)("img",{src:"/assets/img/cp4mcm/ClusterSummary2.png",alt:"Image"}),Object(n.b)("img",{src:"/assets/img/cp4mcm/PolicyCollection.png",alt:"Image"}),Object(n.b)("p",null,"Finally, look at all of the policy compliance associated\nwith you collection of ",Object(n.b)("inlineCode",{parentName:"p"},"PCI")," compliance policies."),Object(n.b)("img",{src:"/assets/img/cp4mcm/SISummary.png",alt:"Image"}),Object(n.b)("h3",null,"Network Policy"),Object(n.b)("p",null,"The Network Policy is used to control (block) network\ntraffic from other pods."),Object(n.b)("p",null,"Configure a new network policy according to the table\nbelow."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",i({parentName:"tr"},{align:"left"}),"Field Name"),Object(n.b)("th",i({parentName:"tr"},{align:"left"}),"Value"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Name"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Policy-network-policy")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Namespace"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: Namespace-must have namespace ‘prod’ Note: You will modify the name prod to k8demo. Selecting this will provide a template to have custom namespace policy definition")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Specifications"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: “NetworkPolicy”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Cluster Binding"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose name: “local-cluster”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Standards"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: “NIST-CSF”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Categories"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: “SystemAndInformationIntegrity”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Controls"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: “Mutation Advisor”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Enforce if Supported"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Leave as is")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Disable Policy"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Leave as is")))),Object(n.b)("img",{src:"/assets/img/cp4mcm/cp4mcm_clipimage00078.png",alt:"Image"}),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-yaml"}),'apiVersion: policy.mcm.ibm.com/v1alpha1\nkind: Policy\nmetadata:\n  name: policy-networkpolicy\n  namespace: residency2020\n  annotations:\n    policy.mcm.ibm.com/standards: NIST-CSF\n    policy.mcm.ibm.com/categories: PR.AC Identity Management Authentication and Access Control\n    policy.mcm.ibm.com/controls: PR.AC-5 Network Integrity\nspec:\n  complianceType: musthave\n  remediationAction: inform\n  disabled: false\n  namespaces:\n    exclude: ["kube-*"]\n    include: ["default"]\n  object-templates:\n    - complianceType: musthave\n      objectDefinition:\n        kind: NetworkPolicy # deny network request\n        apiVersion: networking.k8s.io/v1\n        metadata:\n          name: deny-from-other-namespaces\n        spec:\n          podSelector:\n            matchLabels:\n          ingress:\n          - from:\n            - podSelector: {} # accept ingress from all pods within this namespace only\n---\napiVersion: mcm.ibm.com/v1alpha1\nkind: PlacementBinding\nmetadata:\n  name: binding-policy-networkpolicy\n  namespace: residency2020\nplacementRef:\n  name: placement-policy-networkpolicy\n  kind: PlacementPolicy\n  apiGroup: mcm.ibm.com\nsubjects:\n- name: policy-networkpolicy\n  kind: Policy\n  apiGroup: policy.mcm.ibm.com\n---\napiVersion: mcm.ibm.com/v1alpha1\nkind: PlacementPolicy\nmetadata:\n  name: placement-policy-networkpolicy\n  namespace: residency2020\nspec:\n  clusterLabels:\n    matchExpressions:\n')),Object(n.b)("p",null,"You can validate the network policy that is created on the\nselected namespace."),Object(n.b)("p",null," Using the CLI, run the following command to get the network\npolicies for the namespace."),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-shell"}),"oc get networkpolicies -n <namespace>\n")),Object(n.b)("p",null,"This kind of  policy can be used to allow or deny the\ncommunication between pods living on different namespaces."),Object(n.b)("h3",null,"Pod must exist in a given namespace Policy"),Object(n.b)("p",null,"This kind of policy validates if a pod is present in a given\nnamespace."),Object(n.b)("p",null,"Configure the new policy, requiring that a pod be present,\naccording to the table below:"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",i({parentName:"tr"},{align:"left"}),"Field Name"),Object(n.b)("th",i({parentName:"tr"},{align:"left"}),"Value"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Name"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"policy-namespace")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Namespace"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: Namespace-must have namespace ‘prod’ Note: You will modify the name prod to k8demo. Selecting this will provide a template to have custom namespace policy definition")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Specifications"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: “Pod-nginx” must exist")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Cluster Binding"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose name: “local-cluster”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Standards"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: “NIST-CSF”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Categories"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: “SystemAndInformationIntegrity”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Controls"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: “Mutation Advisor”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Enforce if Supported"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Leave as is")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Disable Policy"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Leave as is")))),Object(n.b)("p",null,"Notice that you can change the name of the pod and the image in\nthe yaml section to create any kind of pod. Make sure to\nwrite a valid value on the image parameter."),Object(n.b)("p",null," Also you can change in the namespaces section, the\nnamespaces where you want your policy to take effect."),Object(n.b)("img",{src:"/assets/img/cp4mcm/clip_image00122.png",alt:"Image"}),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-yaml"}),'apiVersion: policy.mcm.ibm.com/v1alpha1\nkind: Policy\nmetadata:\n  name: policy-pod\n  namespace: residency2020\n  annotations:\n    policy.mcm.ibm.com/standards: NIST-CSF\n    policy.mcm.ibm.com/categories: PR.AC Identity Management Authentication and Access Control, DE.CM Security Continuous Monitoring, PR.IP Information Protection Processes and Procedures, PR.PT Protective Technology\n    policy.mcm.ibm.com/controls: PR.AC-5 Network Integrity, DE.CM-7 Monitoring for unauthorized activity, PR.IP-1 Baseline configuration, PR.PT-3 Least Functionality\nspec:\n  complianceType: musthave\n  remediationAction: inform\n  disabled: false\n  namespaces:\n    exclude: ["kube-*"]\n    include: ["residency2020"]\n  object-templates:\n    - complianceType: musthave\n      objectDefinition:\n        apiVersion: v1\n        kind: Pod # nginx pod must exist\n        metadata:\n          name: nginx-pod\n        spec:\n          containers:\n          - image: nginx:1.7.9\n            name: nginx\n            ports:\n            - containerPort: 80\n---\napiVersion: mcm.ibm.com/v1alpha1\nkind: PlacementBinding\nmetadata:\n  name: binding-policy-pod\n  namespace: residency2020\nplacementRef:\n  name: placement-policy-pod\n  kind: PlacementPolicy\n  apiGroup: mcm.ibm.com\nsubjects:\n- name: policy-pod\n  kind: Policy\n  apiGroup: policy.mcm.ibm.com\n---\napiVersion: mcm.ibm.com/v1alpha1\nkind: PlacementPolicy\nmetadata:\n  name: placement-policy-pod\n  namespace: residency2020\nspec:\n  clusterLabels:\n    matchExpressions:\n')),Object(n.b)("h3",null,"Limit memory range for a namespace Policy"),Object(n.b)("p",null,"Configure the new policy, enforcing quota limits, according\nto the table below:"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",i({parentName:"tr"},{align:"left"}),"Field Name"),Object(n.b)("th",i({parentName:"tr"},{align:"left"}),"Value"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Name"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"policy-namespace")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Namespace"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: Namespace-must have namespace ‘prod’ Note: You will modify the name prod to k8demo. Selecting this will provide a template to have custom namespace policy definition")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Specifications"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: “Limitrange-limit memory usage”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Cluster Binding"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose name: “local-cluster”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Standards"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: “NIST-CSF”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Categories"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: “SystemAndInformationIntegrity”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Controls"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: “Mutation Advisor”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Enforce if Supported"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Leave as is")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Disable Policy"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Leave as is")))),Object(n.b)("p",null," To validate that the quota is created on the selected namespace."),Object(n.b)("img",{src:"/assets/img/cp4mcm/clip_image0034.png",alt:"Image"}),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-shell"}),"oc get networkpolicies -n <namespace>\n")),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-shell"}),"oc -n <namespace> get limits\n")),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-shell"}),"oc -n <namespace> get limits –o yaml\n")),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-yaml"}),'apiVersion: policy.mcm.ibm.com/v1alpha1\nkind: Policy\nmetadata:\n  name: policy-limitrange\n  namespace: residency2020\n  annotations:\n    policy.mcm.ibm.com/standards: NIST-CSF\n    policy.mcm.ibm.com/categories: PR.AC Identity Management Authentication and Access Control, DE.CM Security Continuous Monitoring, PR.IP Information Protection Processes and Procedures, PR.PT Protective Technology\n    policy.mcm.ibm.com/controls: PR.AC-5 Network Integrity, DE.CM-7 Monitoring for unauthorized activity, PR.IP-1 Baseline configuration, PR.PT-3 Least Functionality\nspec:\n  complianceType: musthave\n  remediationAction: inform\n  disabled: false\n  namespaces:\n    exclude: ["kube-*"]\n    include: ["residency2020"]\n  object-templates:\n    - complianceType: musthave\n      objectDefinition:\n        apiVersion: v1\n        kind: LimitRange # limit memory usage\n        metadata:\n          name: mem-limit-range\n        spec:\n          limits:\n          - default:\n              memory: 512Mi\n            defaultRequest:\n              memory: 256Mi\n            type: Container\n---\napiVersion: mcm.ibm.com/v1alpha1\nkind: PlacementBinding\nmetadata:\n  name: binding-policy-limitrange\n  namespace: residency2020\nplacementRef:\n  name: placement-policy-limitrange\n  kind: PlacementPolicy\n  apiGroup: mcm.ibm.com\nsubjects:\n- name: policy-limitrange\n  kind: Policy\n  apiGroup: policy.mcm.ibm.com\n---\napiVersion: mcm.ibm.com/v1alpha1\nkind: PlacementPolicy\nmetadata:\n  name: placement-policy-limitrange\n  namespace: residency2020\nspec:\n  clusterLabels:\n    matchExpressions:\n')),Object(n.b)("h3",null,"Mutation Policy"),Object(n.b)("p",null,"A mutation policy contains the specifications of which pods\nto monitor and what action to take if a mutation is detected.\nFor example, if this policy is created and configured for a\nspecific namespace, and you change something (such as edit or\ndelete a file) in a running pod of that namespace, a\nviolation will be notified. If the policy is configured as\n“enforced”, the\npod will be restarted."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",i({parentName:"tr"},{align:"left"}),"Field Name"),Object(n.b)("th",i({parentName:"tr"},{align:"left"}),"Value"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Name"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"policy-namespace")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Namespace"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: Namespace-must have namespace ‘prod’ Note: You will modify the name prod to k8demo. Selecting this will provide a template to have custom namespace policy definition")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Specifications"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: “Mutation Policy”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Cluster Binding"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose name: “local-cluster”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Standards"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: “NIST-CSF”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Categories"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: “SystemAndInformationIntegrity”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Controls"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Choose: “Mutation Advisor”")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Enforce if Supported"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Leave as is")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Disable Policy"),Object(n.b)("td",i({parentName:"tr"},{align:"left"}),"Leave as is")))),Object(n.b)("img",{src:"/assets/img/cp4mcm/cp4mcm_clipimage0008.png",alt:"Image"}),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-yaml"}),'apiVersion: policy.mcm.ibm.com/v1alpha1\nkind: Policy\nmetadata:\n  name: policy-mutationpolicy\n  namespace: residency2020\n  annotations:\n    policy.mcm.ibm.com/standards: NIST-CSF\n    policy.mcm.ibm.com/categories: PR.AC Identity Management Authentication and Access Control, DE.CM Security Continuous Monitoring\n    policy.mcm.ibm.com/controls: PR.AC-5 Network Integrity, DE.CM-7 Monitoring for unauthorized activity\nspec:\n  complianceType: musthave\n  remediationAction: inform\n  disabled: false\n  namespaces:\n    exclude: ["kube-*"]\n    include: ["default"]\n  policy-templates:\n    - objectDefinition:\n        apiVersion: policies.ibm.com/v1alpha1\n        kind: MutationPolicy # no mutation allowed\n        metadata:\n          name: policy-mutationpolicy-example\n        spec:\n          namespaceSelector:\n            include: ["default","kube-*"]\n            exclude: ["kube-system"]\n          remediationAction: inform # enforce or inform\n          severity: medium\n          conditions:\n            ownership: ["ReplicaSet", "Deployment", "DeamonSet", "ReplicationController", "none"]\n---\napiVersion: mcm.ibm.com/v1alpha1\nkind: PlacementBinding\nmetadata:\n  name: binding-policy-mutationpolicy\n  namespace: residency2020\nplacementRef:\n  name: placement-policy-mutationpolicy\n  kind: PlacementPolicy\n  apiGroup: mcm.ibm.com\nsubjects:\n- name: policy-mutationpolicy\n  kind: Policy\n  apiGroup: policy.mcm.ibm.com\n---\napiVersion: mcm.ibm.com/v1alpha1\nkind: PlacementPolicy\nmetadata:\n  name: placement-policy-mutationpolicy\n  namespace: residency2020\nspec:\n  clusterLabels:\n    matchExpressions:\n')))}s.isMDXComponent=!0},pEPl:function(e){e.exports=JSON.parse('{"data":{"site":{"siteMetadata":{"repository":{"baseUrl":"https://github.com/ibm-cloud-architecture/cloudpak8s","subDirectory":"/","branch":"master"}}}}}')},pOBw:function(e){e.exports=JSON.parse('{"data":{"site":{"pathPrefix":""}}}')}}]);
//# sourceMappingURL=component---src-pages-mcm-cp-4-mcm-governance-risk-index-mdx-7cce22519b1bf321061f.js.map