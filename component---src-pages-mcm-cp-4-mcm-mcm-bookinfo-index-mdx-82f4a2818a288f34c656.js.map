{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./src/pages/mcm/cp4mcm_mcm_bookinfo/index.mdx"],"names":["PageHeader","title","tabs","className","cx","pageHeader","withTabs","length","id","text","EditLink","relativePagePath","repositoryProp","repository","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","theme","description","keywords","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","BackToTopBtn","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"iPAEeA,ECGI,SAAC,GAAD,MAAGC,EAAH,EAAGA,MAAH,IAAUC,YAAV,MAAiB,GAAjB,SACjB,mBAAKC,UAAWC,IAAGC,cAAD,OAAgBC,YAAWJ,EAAKK,OAAhC,KAChB,mBAAKJ,UAAU,YACb,mBAAKA,UAAU,WACb,mBAAKA,UAAU,iBACb,kBAAIK,GAAG,aAAaL,UAAWM,QAC5BR,Q,wBCTES,ECIE,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,iBAA8BC,EAAqB,EAAjCC,WAGhBA,EAHiD,OAEnEC,KACEC,aAAgBF,WAHiD,EAmB3BD,GAAkBC,EAApDG,EAnB6D,EAmB7DA,QAASC,EAnBoD,EAmBpDA,aAEXC,EAAUF,EAAN,SArB2D,EAmBtCG,OAEUF,EAA/B,aAAwDN,EAElE,OAAOK,EACL,mBAAKb,UAAS,WAAaiB,OACzB,mBAAKjB,UAAU,WACb,iBAAGA,UAAWkB,OAAMH,KAAMA,GAA1B,8BAKF,M,oDCnCSI,E,gLCkBbC,OAAA,WAAU,IAAD,EACgBC,KAAKC,MAApBvB,EADD,EACCA,KAAMwB,EADP,EACOA,KACRC,EAAaD,EAChBE,MAAM,KACNC,OAAOC,SACPC,OAAO,GAAG,GAEPC,EAAW9B,EAAK+B,KAAI,SAAAC,GAAQ,IAAD,EACzBC,EAAeC,IAAQF,EAAK,CAAEG,OAAO,IACrCC,EAAWH,IAAiBR,EAC5BY,EAAkB,IAAIC,OAAUb,EAAd,SAClBT,EAAOQ,EAAKe,QAAQF,EAAiBJ,GAC3C,OACE,kBAAIO,IAAKR,EAAK/B,UAAWC,KAAE,OAAIuC,gBAAeL,EAAnB,GAA+BM,aACxD,YAAC,OAAD,CAAMzC,UAAWkB,OAAMwB,GAAE,GAAK3B,GAC3BgB,OAMT,OACE,mBAAK/B,UAAW2C,iBACd,mBAAK3C,UAAU,YACb,mBAAKA,UAAU,WACb,mBAAKA,UAAU,mCACb,uBACE,kBAAIA,UAAW4C,QAAOf,S,GAjCAgB,IAAMC,W,YCyD7BC,IA3DC,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAAY,EACJH,EAAlDI,mBADsD,MACxC,GADwC,EACpC5C,EAAgCwC,EAAhCxC,iBAAkB6C,EAAcL,EAAdK,UACpCtD,EAA8CqD,EAA9CrD,KAAMD,EAAwCsD,EAAxCtD,MAAOwD,EAAiCF,EAAjCE,MAAOC,EAA0BH,EAA1BG,YAAaC,EAAaJ,EAAbI,SAI/BC,EANoD,OAM5D9C,KAAQ8C,WAUJlC,EAAOkC,EACTP,EAASQ,SAASpB,QAAQmB,EAAY,IACtCP,EAASQ,SAYPlC,EATCzB,EAEHwB,EACGE,MAAM,KACNC,OAAOC,SACPC,OAAO,GAAG,IAAMK,IAAQlC,EAAK,GAAI,CAAEmC,OAAO,IAL7B,GAUpB,OACE,YAACyB,EAAA,EAAD,CACE5D,KAAMA,EACN6D,UAAU,EACVN,MAAOA,EACPO,UAAW/D,EACXgE,gBAAiBP,EACjBQ,aAAcP,EACdH,UAAWA,GAEX,YAAC,EAAD,CAAYvD,MAAOqD,EAAQ,YAACA,EAAD,MAAYrD,EAAOkE,MAAM,QAAQjE,KAAMA,IACjEA,GAAQ,YAAC,EAAD,CAAUwB,KAAMA,EAAMxB,KAAMA,EAAMyB,WAAYA,IACvD,YAACyC,EAAA,EAAD,CAAMC,QAAM,GACTjB,EACD,YAAC,EAAD,CAAUzC,iBAAkBA,KAE9B,YAAC2D,EAAA,EAAD,CACEnB,YAAaA,EACbE,SAAUA,EACV3B,KAAMA,EACNxB,KAAMA,EACNyB,WAAYA,IAEd,YAAC4C,EAAA,EAAD,S,+aC5DC,IAAMC,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGpD,E,oIACF,mBACD,OAAO,YAACiD,EAAD,KAAeD,EAAiBhD,EAAhC,CAAuCoD,WAAYA,EAAYC,QAAQ,cAG5E,mEACA,mDAAkC,sBAAQC,WAAW,KAAnB,wCAAlC,QAAmH,sBAAQA,WAAW,KAAnB,aAAnH,YAA6K,sBAAQA,WAAW,KAAnB,WAA7K,4BAAqP,sBAAQA,WAAW,KAAnB,YAArP,iHAEA,sBACE,kBAAIA,WAAW,MAAf,oCACA,kBAAIA,WAAW,MAAf,sBACA,kBAAIA,WAAW,MAAf,2CACA,kBAAIA,WAAW,MAAf,2BACA,kBAAIA,WAAW,MAAf,0BAEF,8CACA,mIAAkH,kBAAIA,WAAW,KAAI,mBAAGA,WAAW,MAAS,CACtJ,KAAQ,wDADuH,wDAArI,yHAG2B,kBAAIA,WAAW,KAAI,mBAAGA,WAAW,MAAS,CAC/D,KAAQ,6EADgC,6EAH9C,+DAMA,sBACE,kBAAIA,WAAW,MAAf,0GACA,kBAAIA,WAAW,MAAf,yHACA,kBAAIA,WAAW,MAAf,oGAEF,8FACA,0EAAyD,sBAAQA,WAAW,KAAnB,WAAzD,sBACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,iFAIL,4CACA,wEAAuD,kBAAIA,WAAW,KAAI,mBAAGA,WAAW,MAAS,CAC3F,KAAQ,yFAD4D,yFAA1E,6IAEsP,sBAAQA,WAAW,KAAI,mBAAGA,WAAW,UAAa,CAClS,KAAQ,6EAD+P,8EAG7Q,kEACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,wCAEL,yDACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,sDAGL,6DACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,oHAEL,kIAAiH,sBAAQA,WAAW,KAAnB,aAAjH,sDACA,kBAAS,CACP,IAAO,qCACP,IAAO,kBAET,iDACA,oEAAmD,kBAAIA,WAAW,KAAI,mBAAGA,WAAW,MAAS,CACvF,KAAQ,uGADwD,uGAAtE,2IAEkQ,sBAAQA,WAAW,KAAnB,qBAFlQ,gLAIA,kBAAS,CACP,IAAO,yCACP,IAAO,iBAET,uGACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,oCAEL,4GACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,qCAEL,wDACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,mEAEL,oHACF,qBAAKA,WAAW,KAAQ,CAClB,IAAO,0CACP,IAAO,4BAEX,+HACF,qBAAKA,WAAW,KAAQ,CAClB,IAAO,wCACP,IAAO,0BAEX,oGACF,qBAAKA,WAAW,KAAQ,CAClB,IAAO,yCACP,IAAO,mCAEX,wLAKJH,EAAWI,gBAAiB,G","file":"component---src-pages-mcm-cp-4-mcm-mcm-bookinfo-index-mdx-82f4a2818a288f34c656.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { pageHeader, withTabs, text } from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, tabs = [] }) => (\n  <div className={cx(pageHeader, { [withTabs]: tabs.length })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const currentTabRegex = new RegExp(`${currentTab}(?!-)`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport BackToTopBtn from '../components/BackToTopBtn';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const { tabs, title, theme, description, keywords } = frontmatter;\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug\n        .split('/')\n        .filter(Boolean)\n        .slice(-1)[0] || slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}\n    >\n      <PageHeader title={Title ? <Title /> : title} label=\"label\" tabs={tabs} />\n      {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <BackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/ibm-cloud-architecture/cloudpak8s/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`Subscription to a Helm Repository Channel`}</h2>\n    <p>{`In this task, you define a `}<strong parentName=\"p\">{`helm repository subscription channel`}</strong>{` and `}<strong parentName=\"p\">{`subscribe`}</strong>{` to that `}<strong parentName=\"p\">{`channel`}</strong>{`. The channel is of type `}<strong parentName=\"p\">{`HelmRepo`}</strong>{`, meaning that the yaml you create will be deployed and stored in a Helm chart.\nVarious tasks associated are`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Look at the bookinfo application`}</li>\n      <li parentName=\"ul\">{`Deploy the channel`}</li>\n      <li parentName=\"ul\">{`Define the helm repo subscription model`}</li>\n      <li parentName=\"ul\">{`Deploy the subscription`}</li>\n      <li parentName=\"ul\">{`Check the application`}</li>\n    </ul>\n    <h3>{`Bookinfo Application`}</h3>\n    <p>{`You will use bookinfo application to deploy as a helm chart. The application is available as helm chart at `}<em parentName=\"p\"><a parentName=\"em\" {...{\n          \"href\": \"https://github.com/hybrid-ops/subscription-examples\"\n        }}>{`https://github.com/hybrid-ops/subscription-examples`}</a></em>{` along with the required resource definitions. You will this github as helm repository.\nNavigate to bookinfo folder, `}<em parentName=\"p\"><a parentName=\"em\" {...{\n          \"href\": \"https://github.com/hybrid-ops/subscription-examples/tree/master/bookinfo\"\n        }}>{`https://github.com/hybrid-ops/subscription-examples/tree/master/bookinfo`}</a></em>{` for the required prerequsites. This folder has three files`}</p>\n    <ul>\n      <li parentName=\"ul\">{`prereqs.yaml - creates bookinfo namespace and creates the required image policy for bookinfo container`}</li>\n      <li parentName=\"ul\">{`prereqs-ns.yaml - creates the namespaces bookinfo-entitilement and bookinfo-project for the channel and subscriptions`}</li>\n      <li parentName=\"ul\">{`ip.yaml - Creates the required image security policy for the the example bookinfo product page.`}</li>\n    </ul>\n    <p>{`You can copy the files to your local workstation and run the commands`}</p>\n    <p>{`Once, you log in to the OpenShift command line of `}<strong parentName=\"p\">{`MCM Hub`}</strong>{`, run the commands`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc apply -f prereqs.yaml\noc apply -f prereqs-ns.yaml\noc apply -f ip.yaml\n`}</code></pre>\n    <h3>{`Create the Channel`}</h3>\n    <p>{`You will use the file, bookinfo-channel.yaml in `}<em parentName=\"p\"><a parentName=\"em\" {...{\n          \"href\": \"https://github.com/hybrid-ops/subscription-examples/tree/master/bookinfo-entitlement\"\n        }}>{`https://github.com/hybrid-ops/subscription-examples/tree/master/bookinfo-entitlement`}</a></em>{` to create the required the channel. You can download the file to run locally. This resource file defines the channel for helm repository `}<strong parentName=\"p\"><a parentName=\"strong\" {...{\n          \"href\": \"https://raw.githubusercontent.com/dymaczew/charts/master/repo/incubator/\"\n        }}>{`https://raw.githubusercontent.com/dymaczew/charts/master/repo/incubator/`}</a></strong></p>\n    <p>{`Log in to the MCM Hub and run the command`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc apply -f bookinfo-channel.yaml\n`}</code></pre>\n    <p>{`Check if the channel is created:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc project bookinfo-entitlement\noc get channel\n`}</code></pre>\n    <p>{`The output should look equivalent to`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`bookinfo-channel   HelmRepo   https://raw.githubusercontent.com/dymaczew/charts/master/repo/incubator/   122m\n`}</code></pre>\n    <p>{`This also can be varified in the console. Click the hambuger icon -> Manage Applications. Then launch the `}<strong parentName=\"p\">{`Resources`}</strong>{` tab which shows the channel that is just created.`}</p>\n    <img {...{\n      \"src\": \"/assets/img/cp4mcm/mcm-channel.jpg\",\n      \"alt\": \"Channel Image\"\n    }}></img>\n    <h3>{`Create the Subscription`}</h3>\n    <p>{`You will use the file, bookinfo-app.yaml in `}<em parentName=\"p\"><a parentName=\"em\" {...{\n          \"href\": \"https://github.com/hybrid-ops/subscription-examples/blob/master/bookinfo-project/bookinfo-app.yaml\"\n        }}>{`https://github.com/hybrid-ops/subscription-examples/blob/master/bookinfo-project/bookinfo-app.yaml`}</a></em>{` to create the required subscription with a placement policy. If you examine the file, you will find  that the placement rule is set to `}<strong parentName=\"p\">{`environment: Demo`}</strong>{`. So, ensure that label is set on your target cluster where you want the application to deployed to.\nAlso, edit the file to modify the route according to your environment.`}</p>\n    <img {...{\n      \"src\": \"/assets/img/cp4mcm/mcm-modifyroute.jpg\",\n      \"alt\": \"Modify Route\"\n    }}></img>\n    <p>{`After the modification of the route, run the command to deploy the application`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc apply -f bookinfo-app.yaml\n`}</code></pre>\n    <p>{`The application should be deployed. You can check if the subscription is propogated`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc get appsub --all-namespaces\n`}</code></pre>\n    <p>{`The output will look similar to`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`bookinfo-project   bookinfo-subscription   Propagated   141m\n`}</code></pre>\n    <p>{`You also can check the console. Click the hambuger icon -> Manage Applications -> Overview\n`}<img parentName=\"p\" {...{\n        \"src\": \"/assets/img/cp4mcm/mcm-applications.jpg\",\n        \"alt\": \"Applications Overview\"\n      }}></img></p>\n    <p>{`Now, click the application bookinfo-app to view the various resources involved with the subscription.\n`}<img parentName=\"p\" {...{\n        \"src\": \"/assets/img/cp4mcm/mcm-appdetails.jpg\",\n        \"alt\": \"Application Details\"\n      }}></img></p>\n    <p>{`Hover over the placement rule to see the placement rule of the application\n`}<img parentName=\"p\" {...{\n        \"src\": \"/assets/img/cp4mcm/mcm-appdetails1.jpg\",\n        \"alt\": \"Placement Rule Visualization\"\n      }}></img></p>\n    <p>{`If you don’t see the application propogated, you may have to check the placement rule and ensure the rule matches to at least one cluster in your environment.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}