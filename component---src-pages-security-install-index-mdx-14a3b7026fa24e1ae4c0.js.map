{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./src/pages/security/install/index.mdx"],"names":["PageHeader","title","tabs","className","cx","pageHeader","withTabs","length","id","text","EditLink","relativePagePath","repositoryProp","repository","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","theme","description","keywords","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","BackToTopBtn","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-security-install-index-mdx-14a3b7026fa24e1ae4c0.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { pageHeader, withTabs, text } from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, tabs = [] }) => (\n  <div className={cx(pageHeader, { [withTabs]: tabs.length })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const currentTabRegex = new RegExp(`${currentTab}(?!-)`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport BackToTopBtn from '../components/BackToTopBtn';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const { tabs, title, theme, description, keywords } = frontmatter;\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug\n        .split('/')\n        .filter(Boolean)\n        .slice(-1)[0] || slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}\n    >\n      <PageHeader title={Title ? <Title /> : title} label=\"label\" tabs={tabs} />\n      {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <BackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/ibm-cloud-architecture/cloudpak8s/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`In this section we describe the installation of IBM Cloud Pak\nfor Security. This document was written based on our experience\nwith installation on\nRed Hat OpenShift 4.2 running on x86 architecture. However,\nthe purpose of this\ndocument is to be agnostic. In other words, Cloud Pak for Security (P4S)\njust requires OpenShift 4.2 to be installed as a base platform.\nIt does not matter if it is on-premises, in the cloud, installed on bare-metal\nor on virtual machines. `}</p>\n    <p>{`In the sections below, we will discuss both\nthe `}<strong parentName=\"p\">{`Online`}</strong>{` and `}<strong parentName=\"p\">{`Offline`}</strong>{` install options for the Cloud Pak.\nYou only need to\nchoose one. The Online option involves installing by directly accessing\ninstallation images from an entitiled registry location on the internet.\nThe Offline option involves downloading a large archive file containing\nall the installation image files, extracting that archive, and installing\nusing those extracted files. Depending on your cluster environment and\npolicies, you will choose one option or the other. The Offline option is\noften appropriate for “air-gapped” installations, where access to the\ninternet is restricted or not allowed.`}</p>\n    <h2><strong parentName=\"h2\">{`Prerequisites`}</strong></h2>\n    <p>{`This installation chapter does not describe how to install or configure the\nunderlying OpenShift platform. Prior to installing make sure you have\na working OpenShift cluster with the required capacity. The installation\nof OpenShift is described `}<a parentName=\"p\" {...{\n        \"href\": \"/ocp/introduction\"\n      }}>{`here`}</a>{`.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Check the `}<a parentName=\"li\" {...{\n          \"href\": \"/security/prereq\"\n        }}>{`prerequisites chapter`}</a>{` to make sure\nyou have sized your cluster\nappropriately and you have sufficient capacity`}</li>\n      <li parentName=\"ul\">{`For offline installs make sure you have downloaded the Cloud Pak\nfor Security Passport Advantage Archive (PPA) file and copied it\nto the installation server.\nSee the `}<a parentName=\"li\" {...{\n          \"href\": \"/security/prereq\"\n        }}>{`prerequisites chapter`}</a>{` for more details.`}</li>\n      <li parentName=\"ul\">{`Offline installation will require the docker client to be\ninstalled on the\ninstallation server`}</li>\n      <li parentName=\"ul\">{`For online installs make sure you have an entitlement key to access\nthe IBM Entitled Docker Registry`}</li>\n    </ul>\n    <h2><strong parentName=\"h2\">{`Cloud Pak for Security Installation`}</strong></h2>\n    <p>{`Cloud Pak for Security 1.2 requires Common Services to be installed\nfirst. After that, Cloud Pak for Security can be installed using\neither the Offline or Online option.`}</p>\n    <h2><strong parentName=\"h2\">{`Installing Common Services`}</strong></h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Obtain the entitlement key that is assigned to your ID.`}</p>\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">{`Log in to\n`}<a parentName=\"li\" {...{\n              \"href\": \"https://myibm.ibm.com/products-services/containerlibrary\"\n            }}>{`MyIBM Container Software Library`}</a>{`\nwith the IBMid and password that are associated with the entitled\nsoftware.`}</li>\n          <li parentName=\"ol\">{`In the Entitlement keys section, select `}<strong parentName=\"li\">{`Copy key`}</strong>{` to copy the\nentitlement key to the clipboard.`}</li>\n        </ol>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Log in to the Install server (assuming you have a separate server\nfor install) as a user with root permissions or as a user with sudo\nprivileges.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Authenticate to the OpenShift server where you would like to install\nCommon Services (your token can be copied from the OpenShift Console UI)`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`oc login --token=<your_token> --server=<INSERT_SERVER_URL_HERE>\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Log in to the entitled registry.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`sudo docker login cp.icr.io --username <username> --password <entitlement_key>\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create the secret.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`oc create secret docker-registry entitled-registry --docker-server=cp.icr.io --docker-username=<username> --docker-password=<entitlement_key> --docker-email=<docker_email>\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create an installation directory to store the IBM Common Services\nconfiguration files, and change to that directory.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`mkdir ~/common-services ; cd ~/common-services\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Pull the installer image from the entitled registry by running the following command:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`docker pull cp.icr.io/cp/icp-foundation/icp-inception:3.2.4\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Extract the cluster directory:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`sudo docker run --rm -v $(pwd):/data:z -e LICENSE=accept --security-opt label:disable cp.icr.io/cp/icp-foundation/icp-inception:3.2.4 cp -r cluster /data\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`The step above creates a cluster directory, creates cluster\nconfiguration files , and copies the kubeconfig file from theauth folder\nof the\ncop 4.2 installation directory into the cluster directory`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`cp <ocp install dir>/auth/kubeconfig ./kubeconfig\n`}</code></pre>\n        <p parentName=\"li\">{`   or`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`oc config view > kubeconfig\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Update the `}<inlineCode parentName=\"p\">{`config.yaml`}</inlineCode>{` file.\nIn the file, update the `}<strong parentName=\"p\">{`cluster_node`}</strong>{` sections with our clusters. You will need to add\nthe nodes from your cluster. Use the exact node names from\nthe `}<inlineCode parentName=\"p\">{`oc get nodes`}</inlineCode>{` command.`}</p>\n      </li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Add the storage class for your cluster in the `}<strong parentName=\"p\">{`storage_class`}</strong>{` field. The storage class must be a block storage provider. Use the exact node names from the `}<inlineCode parentName=\"p\">{`oc get sc`}</inlineCode>{` command.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Update the `}<strong parentName=\"p\">{`default_admin_password`}</strong>{` field with a suitable password`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Define the `}<strong parentName=\"p\">{`management_services`}</strong>{` appropriate to your install`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The following IBM® Cloud Private management services must be enabled:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`logging`}</li>\n          <li parentName=\"ul\">{`auth-idp`}</li>\n          <li parentName=\"ul\">{`monitoring`}</li>\n        </ul>\n        <p parentName=\"li\">{`Example `}<inlineCode parentName=\"p\">{`config.yaml`}</inlineCode>{` file `}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`# Licensed Materials - Property of IBM\n# IBM Cloud private\n# @ Copyright IBM Corp. 2019 All Rights Reserved\n# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.\n\n---\n\n# A list of OpenShift nodes\ncluster_nodes:\n  master:\n    - compute-0\n  proxy:\n    - compute-0\n  management:\n    - compute-1\n\nstorage_class: rook-ceph-block\n\n## You can set different storage class for logging.\n## By default it will use the value of storage_class.\n# elasticsearch_storage_class:\n\n## If you are installing on ROKS environment please update following settings\n## roks_enabled: set this to true\n## roks_url: Openshift public service endpoint URL\n## roks_user_prefix: User prefix used for users enabled on ROKS, Default value is 'IAM#'.\n## You can get users information from command 'oc get users'.\n## ROKS settings\nroks_enabled: false\nroks_url: <roks_url>\nroks_user_prefix: \"IAM#\"\n\ndefault_admin_password: admin\npassword_rules:\n- '(.*)'\n\nimage_repo: cp.icr.io/cp/icp-foundation\nprivate_registry_enabled: true\ndocker_username: cp\ndocker_password: <enttitlement key from step 1>\n\n## You can disable following services if they are not needed\nmanagement_services:\n  # Common services\n  iam-policy-controller: enabled\n  metering: enabled\n  licensing: disabled\n  monitoring: enabled\n  nginx-ingress: enabled\n  common-web-ui: enabled\n  catalog-ui: enabled\n  mcm-kui: enabled\n  logging: disabled\n  audit-logging: disabled\n  system-healthcheck-service: disabled\n  multitenancy-enforcement: disabled\n`}</code></pre>\n      </li>\n    </ul>\n    <p>{`When this configuration is complete, you can start the installation.\nThis could run for ~30-45min.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`\\`\\`\\`\nsudo docker run -t --net=host -e LICENSE=accept -v $(pwd)/cluster:/installer/cluster:z -v /var/run:/var/run:z -v /etc/docker:/etc/docker:z --security-opt label:disable cp.icr.io/cp/icp-foundation/icp-inception:3.2.4 addon -v\n\\`\\`\\`\n`}</code></pre>\n    <h2><strong parentName=\"h2\">{`Offline Installation`}</strong></h2>\n    <p>{`Follow these instructions (down to the `}<strong parentName=\"p\">{`Online Installation`}</strong>{` section)\nif you want to use the Offline installation option. If you can use the\nOnline installation option, skip down to the `}<strong parentName=\"p\">{`Online Installation`}</strong>{`\nsection now to continue.`}</p>\n    <h3><strong parentName=\"h3\">{`Installing Cloud Pak for Security Foundation Chart`}</strong></h3>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a directory for Cloud Pak for Security.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`mkdir /opt/cp4s; cd /opt/cp4s\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Extract the Cloud Pake for Security installation archive. For example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`tar xf CPS_1.2_OS_EN.tgz \n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a new Namespace/Project in OCP for Cloud Pak for Security.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`oc new-project cp4security\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Login to the ICP console.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`cloudctl login -a <icp console url> -u admin -p admin -n cp4security\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Load the archive into ICP console.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`cloudctl catalog load-archive --archive ibm-security-foundations-prod-1.2.0.0.tgz --registry  default-route-openshift-image-registry.apps.ctocps.ocp.csplab.local/cp4security\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Extract the Security Foundations archive. `}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`tar xzf ibm-security-foundations-prod-<RELEASE>.tgz\\`\\`\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run the command below to get the Repo password to execute the next step.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`oc serviceaccounts get-token -n cp4security default\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run the command below to create pre-requisites.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`ibm-security-foundations-prod/ibm_cloud_pak/pak_extensions/pre-install/preInstall.sh -n cp4security -force  -repo image-registry.openshift-image-registry.svc:5000/cp4security dfault <secret from above command>  -sysctl\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run the command below to check the pre requisites.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`ibm-security-foundations-prod/ibm_cloud_pak/pak_extensions/pre-install/checkprereq.sh -n cp4security\n`}</code></pre>\n        <p parentName=\"li\">{`The output will display the default storage class and when\nsuccessfull will indicate :`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`INFO: ibm-security-foundations prerequisites are OK \n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Execute the command below to install the chart.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language- \"\n          }}>{`helm install --name <RELEASE_NAME> --namespace=cp4security  ./ibm-security-foundations-prod --tls --values ibm-security-foundations-prod/values.yaml --set global.helmUser=admin --set global.repository=image-registry.openshift-image-registry.svc:5000/cp4security --set global.repositoryType=local\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Wait for all the pods’ status to be `}<inlineCode parentName=\"p\">{`Running`}</inlineCode>{` in the\n`}<inlineCode parentName=\"p\">{`CP4Security`}</inlineCode>{` namespace. `}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`watch -n5 \"oc get pods -n cp4security\"\n`}</code></pre>\n      </li>\n    </ol>\n    <h3><strong parentName=\"h3\">{`Installing Cloud Pak for Security Solution Chart`}</strong></h3>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Login to the IBM CLoud Platform (ICP) console.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`cloudctl login -a <icp console url> -u admin -p admin -n cp4security\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Load the archive into the ICP console.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`cloudctl catalog load-archive --archive ibm-security-solutions-prod-1.0.4.tgz --registry  default-route-openshift-image-registry.apps.ctocps.ocp.csplab.local/cp4security\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Extract the Solutions archive. `}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`tar xzf ibm-security-solutions-prod-<RELEASE>.tgz\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`A fully qualified domain name (FQDN) must be created for the Cloud Pak\nfor Security application. Create a `}<inlineCode parentName=\"p\">{`DNS CNAME`}</inlineCode>{` record pointing to the ICP\nconsole URL. Create new certificates from\n`}<a parentName=\"p\" {...{\n            \"href\": \"https://www.sslforfree.com/\"\n          }}><inlineCode parentName=\"a\">{`Letsencrypt`}</inlineCode></a>{` on any domain.\nFollow the letsencrypt steps to create certificates.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Concatenate the `}<inlineCode parentName=\"p\">{`certificate.crt`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`ca_bundle.crt`}</inlineCode>{` to create a cert\nbundle (one file) that we can use for the installation. The following\nsteps can be used for concatenation.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`cat certificate.crt  > concat.crt\necho >> concat.crt\ncat ca_bundle.crt >> concat.crt\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run the command below to store the cluster administrator\ncredentials into a secret.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`ibm-security-solutions-prod/ibm_cloud_pak/pak_extensions/pre-install/preInstall.sh -cluster admin:admin -cert concat.crt -key private.key\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run the command below to check the pre-requisites.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`ibm-security-foundations-prod/ibm_cloud_pak/pak_extensions/pre-install/checkprereq.sh -n <NAMESPACE> --solutions\n`}</code></pre>\n        <p parentName=\"li\">{`The output will display the default storage class and when\nsuccessfull will indicate :`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`INFO: ibm-security-solutions prerequisites are OK\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Execute the command below to install the chart.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language- \"\n          }}>{`helm install --name <RELEASE_NAME> --namespace=cp4security  ./ibm-security-solutions-prod --tls --values ibm-security-solutions-prod/values.yaml --set global.storageClass=<storage class from oc get sc> --set global.cluster.hostname=<ocp domain> --set global.domain.default.domain=<FQDN from step 5>  --set global.repository=image-registry.openshift-image-registry.svc:5000/cp4security --set global.repositoryType=local\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Wait for all the pods’ status to be `}<inlineCode parentName=\"p\">{`Running`}</inlineCode>{` in the\n`}<inlineCode parentName=\"p\">{`CP4Security`}</inlineCode>{` namespace. `}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`watch -n5 \"oc get pods\"\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add ldap to the cluster. For instance, IBM’ers could use the\nlink below to add the Bluepages ldap.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`https://github.ibm.com/cp4s/cp4s-developer-tools/blob/991b8c3688dcd9f7c8e6c4c1ebf1ff74af3c9732/developer-docs/Bluepages%20LDAP.md\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Follow the IBM Cloud Private instructions in\n`}<a parentName=\"p\" {...{\n            \"href\": \"https://www.ibm.com/support/knowledgecenter/SSBS6K_3.2.1/user_management/add_user.html?view=kc\"\n          }}>{`Add users to the team`}</a>{`.\nEach IBM Cloud Pak for Security user must be assigned a suitable role.`}</p>\n        <p parentName=\"li\">{`   To assign a standard IBM Cloud Pak for Security user role, select `}<strong parentName=\"p\">{`Viewer`}</strong>{`.`}</p>\n        <p parentName=\"li\">{`   To assign an IBM Cloud Pak for Security platform administrator role, select `}<strong parentName=\"p\">{`Administrator`}</strong>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`You can now access the dashboard using the\n`}<inlineCode parentName=\"p\">{`cluster.hostname`}</inlineCode>{` with the Viewer or Adminsitrator credentials created\nabove.`}</p>\n      </li>\n    </ol>\n    <h2><strong parentName=\"h2\">{`Online Installation`}</strong></h2>\n    <p>{`Use the Online installation method if you have internet access to connect\nto the entitlement registry. If you have skipped the Offline Installation\noption, this is where you should continue.`}</p>\n    <h3><strong parentName=\"h3\">{`Installing Cloud Pak for Security Foundation Chart`}</strong></h3>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a directory for Cloud Pak for Security. Change your current directory\nto it.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`mkdir /opt/cp4s; cd /opt/cp4s\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a new Namespace/Project in OCP for Cloud Pak for Security.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`oc new-project cp4security\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Login to the ICP console.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`helm init; cloudctl login -a <icp console url> -u admin -p admin -n cp4security\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Download the charts from the Helm repo.`}</p>\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`To verify that Helm has the entitled repository, run the command:`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`helm repo list\n`}</code></pre>\n            <p parentName=\"li\">{`Check in the output that the results from the previous step contains\nthe line:`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`entitled https://raw.githubusercontent.com/IBM/charts/master/repo/entitled/\n`}</code></pre>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`If the verification step fails, run the following command to add\nthe entitled repository.`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`helm repo add entitled https://raw.githubusercontent.com/IBM/charts/master/repo/entitled/\n`}</code></pre>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Fetch and extract the charts.`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`helm fetch entitled/ibm-security-foundations-prod\nhelm fetch entitled/ibm-security-solutions-prod\ntar xzf ibm-security-foundations-prod-<RELEASE>.tgz\ntar xzf ibm-security-solutions-prod-<RELEASE>.tgz\n`}</code></pre>\n          </li>\n        </ol>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run the command below to create the pre-requisites.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`ibm-security-foundations-prod/ibm_cloud_pak/pak_extensions/pre-install/preInstall.sh -n cp4security -force  -repo cp.icr.io cp <entitlement key> -sysctl\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run the command below to check the prerequisites.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`ibm-security-foundations-prod/ibm_cloud_pak/pak_extensions/pre-install/checkprereq.sh -n cp4security\n`}</code></pre>\n        <p parentName=\"li\">{`The output will display the default storage class and when\nsuccessfull will indicate :`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`INFO: ibm-security-foundations prerequisites are OK \n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Execute the command below to install the chart.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language- \"\n          }}>{`helm install --name <RELEASE_NAME> --namespace=cp4security  ./ibm-security-foundations-prod --tls --values ibm-security-foundations-prod/values.yaml --set global.helmUser=admin \n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Wait for all the pods’ status to be `}<inlineCode parentName=\"p\">{`Running`}</inlineCode>{` in the\n`}<inlineCode parentName=\"p\">{`CP4Security`}</inlineCode>{` namespace. `}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`watch -n5 \"oc get pods -n cp4security\"\n`}</code></pre>\n      </li>\n    </ol>\n    <h3><strong parentName=\"h3\">{`Installing Cloud Pak for Security Solution Chart`}</strong></h3>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Login to the ICP console.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`cloudctl login -a <icp console url> -u admin -p admin -n cp4security\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`A fully qualified domain name (FQDN) must be created for the Cloud Pak\nfor Security application. Create a `}<inlineCode parentName=\"p\">{`DNS CNAME`}</inlineCode>{` record pointing to the ICP\nconsole URL. Create new certificates from\n`}<a parentName=\"p\" {...{\n            \"href\": \"https://www.sslforfree.com/\"\n          }}><inlineCode parentName=\"a\">{`Letsencrypt`}</inlineCode></a>{` on any domain.\nFollow the letsencrypt steps to create certificates.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Concatenate the `}<inlineCode parentName=\"p\">{`certificate.crt`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`ca_bundle.crt`}</inlineCode>{` to create a\ncert bundle (one file) that we can use for the installation. The following\nsteps can be used for concatenation.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`cat certificate.crt  > concat.crt\necho >> concat.crt\ncat ca_bundle.crt >> concat.crt\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run the command below to store the cluster administrator\ncredentials into a secret.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`ibm-security-solutions-prod/ibm_cloud_pak/pak_extensions/pre-install/preInstall.sh -cluster admin:admin -cert concat.crt -key private.key\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run the command below to check the pre-requisites.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`ibm-security-foundations-prod/ibm_cloud_pak/pak_extensions/pre-install/checkprereq.sh -n <NAMESPACE> --solutions\n`}</code></pre>\n        <p parentName=\"li\">{`The output will display the default storage class and when successfull\nwill indicate :`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`INFO: ibm-security-solutions prerequisites are OK\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Execute the command below to install the chart.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language- \"\n          }}>{`helm install --name <RELEASE_NAME> --namespace=cp4security  ./ibm-security-solutions-prod --tls --values ibm-security-solutions-prod/values.yaml --set global.storageClass=<storage class from oc get sc> --set global.cluster.hostname=<ocp domain> --set global.domain.default.domain=<FQDN from step 5>\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Wait for all the pods’ status to be `}<inlineCode parentName=\"p\">{`Running`}</inlineCode>{` in the\n`}<inlineCode parentName=\"p\">{`CP4Security`}</inlineCode>{` namespace. `}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`watch -n5 \"oc get pods\"\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add ldap to the cluster. For instance, IBM’ers could use the\nlink below to add the Bluepages ldap.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`https://github.ibm.com/cp4s/cp4s-developer-tools/blob/991b8c3688dcd9f7c8e6c4c1ebf1ff74af3c9732/developer-docs/Bluepages%20LDAP.md\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Follow the IBM Cloud Private instructions in\n`}<a parentName=\"p\" {...{\n            \"href\": \"https://www.ibm.com/support/knowledgecenter/SSBS6K_3.2.1/user_management/add_user.html?view=kc\"\n          }}>{`Add users to the team`}</a>{`.\nEach IBM Cloud Pak for Security user must be assigned a suitable role.`}</p>\n        <p parentName=\"li\">{`   To assign a standard IBM Cloud Pak for Security user role, select `}<strong parentName=\"p\">{`Viewer`}</strong>{`.`}</p>\n        <p parentName=\"li\">{`   To assign an IBM Cloud Pak for Security platform administrator role, select `}<strong parentName=\"p\">{`Administrator`}</strong>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`You can now access the dashboard using the\n`}<inlineCode parentName=\"p\">{`cluster.hostname`}</inlineCode>{` with the Viewer or Adminsitrator credentials created\nabove.`}</p>\n      </li>\n    </ol>\n    <h2><strong parentName=\"h2\">{`Uninstalling Cloud Pak for Security`}</strong></h2>\n    <p>{`Run the following commands to uninstall the Cloud Pak for Security.`}</p>\n    <h3><strong parentName=\"h3\">{`Uninstalling the Cloud Pak for Security Solution Chart`}</strong></h3>\n    <p>{`To uninstall the solution chart, run the following command.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`helm delete --purge <RELEASE_NAME> --tls \n`}</code></pre>\n    <p>{`The following script must also be run, as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`ibm-security-solutions-prod/ibm_cloud_pak/pak_extensions/post-delete/Cleanup.sh <NAMESPACE> --force --all\n`}</code></pre>\n    <h3><strong parentName=\"h3\">{`Uninstalling the Postgres Service`}</strong></h3>\n    <p>{`This `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.ibm.com/support/knowledgecenter/SSTDPP_1.1.0/docs/security-pak/postgrescerts.html\"\n      }}>{`link`}</a>{`\nprovides details on how the Postgres Service can be uninstalled.`}</p>\n    <h3><strong parentName=\"h3\">{`Removing the service account for ElasticSearch`}</strong></h3>\n    <p>{`The following command can be run to remove the\n`}<inlineCode parentName=\"p\">{`ibm-dba-ek-isc-cases-elastic-bai-psp-sa`}</inlineCode>{` service account that is\ncreated for Elasticsearch.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc delete serviceaccount ibm-dba-ek-isc-cases-elastic-bai-psp-sa -n <NAMESPACE>\n`}</code></pre>\n    <h3><strong parentName=\"h3\">{`Uninstalling the Cloud Pak for Security Foundation Chart`}</strong></h3>\n    <p>{`To uninstall and delete the `}<inlineCode parentName=\"p\">{`ibm-security-foundations-prod`}</inlineCode>{` release,\nrun the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`helm delete <RELEASE_NAME> --purge --tls\n`}</code></pre>\n    <p>{`The post-delete script must also be run, as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`ibm-security-foundations-prod/ibm_cloud_pak/pak_extensions/post-delete/Cleanup.sh <NAMESPACE> --all --force\n`}</code></pre>\n    <h3><strong parentName=\"h3\">{`Uninstalling Common Services`}</strong></h3>\n    <p>{`To uninstall ICP Common Services, run the following commands.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Change to the `}<inlineCode parentName=\"p\">{`cluster`}</inlineCode>{` directory within your ICP installation directory:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{` cd /<installation_directory>/cluster\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Uninstall ICP by running the `}<inlineCode parentName=\"p\">{`uninstall-with-openshift`}</inlineCode>{` command:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{` sudo docker run -t --net=host -e LICENSE=accept -v $(pwd):/installer/cluster:z -v /var/run:/var/run:z -v /etc/docker:/etc/docker:z --security-opt label:disable ibmcom/icp-inception-amd64:3.2.1-rhel-ee uninstall-with-openshift\n`}</code></pre>\n      </li>\n    </ol>\n    <h2><strong parentName=\"h2\">{`Additional Resources`}</strong></h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.ibm.com/support/knowledgecenter/SSTDPP_1.1.0/docs/scp-core/overview.html\"\n        }}>{`Knowledge Center - Cloud Pak for Security Installation Guide`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}