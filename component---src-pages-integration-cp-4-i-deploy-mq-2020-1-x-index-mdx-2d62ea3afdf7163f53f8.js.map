{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./src/pages/integration/cp4i-deploy-mq-2020.1.x/index.mdx"],"names":["PageHeader","title","tabs","className","cx","pageHeader","withTabs","length","id","text","EditLink","relativePagePath","repositoryProp","repository","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","theme","description","keywords","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","BackToTopBtn","_frontmatter","makeShortcode","name","console","warn","InlineNotification","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-integration-cp-4-i-deploy-mq-2020-1-x-index-mdx-2d62ea3afdf7163f53f8.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { pageHeader, withTabs, text } from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, tabs = [] }) => (\n  <div className={cx(pageHeader, { [withTabs]: tabs.length })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const currentTabRegex = new RegExp(`${currentTab}(?!-)`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport BackToTopBtn from '../components/BackToTopBtn';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const { tabs, title, theme, description, keywords } = frontmatter;\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug\n        .split('/')\n        .filter(Boolean)\n        .slice(-1)[0] || slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}\n    >\n      <PageHeader title={Title ? <Title /> : title} label=\"label\" tabs={tabs} />\n      {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <BackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/ibm-cloud-architecture/cloudpak8s/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`Version 2020.2 is out for Cloud Pak for Ingegration.  This version is the first to feature Operators and has significant changes to the deployment and operations.  Please refer to the `}<a parentName=\"p\" {...{\n          \"href\": \"https://www.ibm.com/support/knowledgecenter/en/SSGT7J_20.2/overview.html\"\n        }}>{`Knowledge Center`}</a>{` while we update this playbook.  Thanks!`}</p>\n    </InlineNotification>\n    <p>{`This page provides the guidance for installing MQ for Red Hat\nOpenShift both on-prem and on IBM Cloud.`}</p>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Make sure permissions are set</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Create MQ instance in Cloud Pak for Integration</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Monitoring the Deployment</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Register with Tracing Service</AnchorLink>\n    </AnchorLinks>\n    <h3><strong parentName=\"h3\">{`Make sure permissions are set`}</strong></h3>\n    <p>{`You can open up permissions for install in you `}<inlineCode parentName=\"p\">{`mq`}</inlineCode>{` namespace by issing\nthe following commands:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc adm policy add-scc-to-group ibm-anyuid-scc system:serviceaccounts:mq\noc adm policy add-scc-to-group anyuid system:serviceaccounts:mq\n`}</code></pre>\n    <h3><strong parentName=\"h3\">{`Create MQ instance in Cloud Pak for Integration`}</strong></h3>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create an instance of MQ queue manager by clicking on “Add new instance” in the MQ tile in Platform Navigator.\n`}<img parentName=\"p\" {...{\n            \"src\": \"/assets/img/integration/deploy-queue-manager/5.mq-nav.png\",\n            \"alt\": \"Add New Instance\"\n          }}></img></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`This will open a pop up window showing requirements for deploying MQ.\nClick `}<strong parentName=\"p\">{`Continue`}</strong>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`This will open the MQ helm chart to deploy MQ to the cluster.\nClick `}<strong parentName=\"p\">{`Overview`}</strong>{` to review the requirements to deploy MQ chart.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Unless you require fine grained rights to be defined for your\ninstallation, the default rbac settings defined on install will be\nsufficient.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`MQ also requires Storage class or Persistent volume to be pre-defined\nif persistence is being used. It is possible to deploy MQ chart without\nusing persistence. However, it is highly recommended to use persistent\nstorage as any changes you make in the MQ UI will be lost if the pods were\nrecreated.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`If you are using the entitled registry, your image pull secret will\nalready be created for you as `}<inlineCode parentName=\"p\">{`ibm-entitlement-key`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`If you are not using entitled registry, obtain an image pull secret\nusing the command below:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`To obtain the secret for pulling the image login to the OCP CLI and run:\n\\`\\`\\`\noc get secrets -n mq\n\\`\\`\\`\nThe pull secret starts with **deployer-dockercfg**\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`After performing the above pre-requisites, click on `}<strong parentName=\"p\">{`Configuration`}</strong>{`\ntab to provide the values required to deploy MQ chart.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Provide the name for the chart, select `}<strong parentName=\"p\">{`mq`}</strong>{` as Target namespace and\nselect `}<strong parentName=\"p\">{`local-cluster`}</strong>{` as Target-Cluster. Also check the ‘License’ box\nto accept license.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Expand the ‘Quick Start’ twisty to expose the Configuration Settings\nfor TLS.\n`}<img parentName=\"p\" {...{\n            \"src\": \"/assets/img/integration/deploy-queue-manager/6.mq-quickstart.png\",\n            \"alt\": null\n          }}></img></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Set the Cluster Hostname as the proxy node address for your installation.  Omit the `}<inlineCode parentName=\"p\">{`https://`}</inlineCode>{` in the url.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Next, click to expand ‘All parameters’ to configure the chart for\ndeployment.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Untickthe box “Production usage” box.  Double check your image\nrepository is correct.  For entitled registry it will look like\n`}<inlineCode parentName=\"p\">{`cp.icr.io/ibm-mqadvanced-server-integration`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Set the `}<inlineCode parentName=\"p\">{`Image Pull Secret`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`ibm-entitlement-key`}</inlineCode>{` for the entitled\nregistry or the `}<strong parentName=\"p\">{`deployer-dockercfg`}</strong>{` value specific to your environment\nas indicated in the step above.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Moving down, under the `}<inlineCode parentName=\"p\">{`IBM Cloud Pak for Integration`}</inlineCode>{` heading it will\nask for the location of your platform navigator is installed at.  In most\ninstallations, this will be the `}<inlineCode parentName=\"p\">{`integration`}</inlineCode>{` namespace, but check to be\nsure.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Moving down, under the `}<inlineCode parentName=\"p\">{`TLS`}</inlineCode>{` -> `}<inlineCode parentName=\"p\">{`Configuration Settings for TLS`}</inlineCode>{`.\nTick the `}<inlineCode parentName=\"p\">{`Generate Certificate`}</inlineCode>{` box. The cluster hostname value should\nalready be populated with the proxy node value defined earlier.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Under the `}<inlineCode parentName=\"p\">{`Persistence`}</inlineCode>{` heading.  If you choose to use persistent\nstorage then you will need to tick both the `}<inlineCode parentName=\"p\">{`Enable persistence`}</inlineCode>{` and\n`}<inlineCode parentName=\"p\">{`Use dynamic provisioning`}</inlineCode>{` boxes.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Under the `}<inlineCode parentName=\"p\">{`Data PVC`}</inlineCode>{` heading.  Populate the `}<inlineCode parentName=\"p\">{`Storage Class name`}</inlineCode>{` with\nthe requisite storageclass.  Use `}<inlineCode parentName=\"p\">{`oc get storageclasses`}</inlineCode>{` to get a list on\nyour system.  If you are using IBM Cloud this can be the `}<inlineCode parentName=\"p\">{`ibmc-file-bronze`}</inlineCode>{`.\nEither way, file storage (not block) is required for use with MQ.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`There is no need to repeat this for the other sections (Log PVC and QM\nPVC etc) for a dev environment.  If you want to use a separate storage\nclass for these items, you can individually specify the storageclasses as\nrequired.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Moving down, under Security, ensure the check box for\n`}<inlineCode parentName=\"p\">{`Initialize volume as root`}</inlineCode>{` is ticked.  This is the default.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Last item to configure is to enable OD Tracing for the MQ instance.\nAt the bottom of the MQ Chart you will find the\n`}<inlineCode parentName=\"p\">{`Operation Dashboard Configuration`}</inlineCode>{`.\n`}<img parentName=\"p\" {...{\n            \"src\": \"/assets/img/integration/deploy-queue-manager/11.tracingchart.png\",\n            \"alt\": null\n          }}></img></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Click the Tick Box for `}<inlineCode parentName=\"p\">{`Enable Operations Dashboard`}</inlineCode></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`At the bottom, populate the `}<inlineCode parentName=\"p\">{`OD tracing instance namespace`}</inlineCode>{` with the\nname of the tracing namespace, which in this sample is `}<inlineCode parentName=\"p\">{`tracing`}</inlineCode></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Scroll to the bottom and then click install.`}</p>\n      </li>\n    </ol>\n    <h3><strong parentName=\"h3\">{`Monitoring the Deployment`}</strong></h3>\n    <ol>\n      <li parentName=\"ol\">{`Once all the pods are up, it will resemble the following.  Use the\n`}<inlineCode parentName=\"li\">{`oc get pods`}</inlineCode>{` command to view the pods in flight\n`}<img parentName=\"li\" {...{\n          \"src\": \"/assets/img/integration/deploy-queue-manager/12.mqpods.png\",\n          \"alt\": null\n        }}></img></li>\n    </ol>\n    <h3><strong parentName=\"h3\">{`Register with Tracing Service`}</strong></h3>\n    <ol>\n      <li parentName=\"ol\">{`Near the end of the install of MQ, a job will be created that has the\nname `}<inlineCode parentName=\"li\">{`odtracing.registration`}</inlineCode>{`.  This job will not complete until the\nRegistration is completed inside of the Tracing capability.`}</li>\n      <li parentName=\"ol\">{`What will happen is that a request will be created inside of tracing\nthat you need to act upon.  Navigate to the Platform Navigator and via\nthe Hamburger menu select Tracing and then when the window pops out\nselect the name of your tracing instance which should be called\n`}<inlineCode parentName=\"li\">{`tracing`}</inlineCode>\n        <img parentName=\"li\" {...{\n          \"src\": \"/assets/img/integration/deploy-queue-manager/13.tracing-nav.png\",\n          \"alt\": null\n        }}></img></li>\n      <li parentName=\"ol\">{`Within tracing, select the `}<inlineCode parentName=\"li\">{`Manage`}</inlineCode>{` icon from the menu.  Looks like a\ncog wheel.\n`}<img parentName=\"li\" {...{\n          \"src\": \"/assets/img/integration/deploy-queue-manager/14.tracing-from-menu.png\",\n          \"alt\": null\n        }}></img></li>\n      <li parentName=\"ol\">{`Click on the `}<inlineCode parentName=\"li\">{`Registration Requests`}</inlineCode>{` icon.`}</li>\n      <li parentName=\"ol\">{`You should see a new registration request for your MQ install.\nClick the `}<inlineCode parentName=\"li\">{`approve`}</inlineCode>{` link`}</li>\n      <li parentName=\"ol\">{`You will see a pop up window with some lines to copy to your clipboard.\nClick the 2 boxes icon in the top right icon to copy the commands required.\n`}<img parentName=\"li\" {...{\n          \"src\": \"/assets/img/integration/deploy-queue-manager/15.process-request.png\",\n          \"alt\": null\n        }}></img></li>\n      <li parentName=\"ol\">{`Ensuring you have an active `}<inlineCode parentName=\"li\">{`oc`}</inlineCode>{` session and in the `}<inlineCode parentName=\"li\">{`mq`}</inlineCode>{` project.\nPaste the commands to the window and it will run then and finish the\nprocessing.`}</li>\n      <li parentName=\"ol\">{`If you are slow in doing the steps above.  It is possible you might\nsee the `}<inlineCode parentName=\"li\">{`odtracing.registration`}</inlineCode>{` job fail.  No worries.  Once you complete\nthe pasting of the commands to create your secret, the job will re-create\nitself.`}</li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}