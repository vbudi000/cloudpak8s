{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./src/pages/automation/install-bai/index.mdx"],"names":["PageHeader","title","tabs","className","cx","pageHeader","withTabs","length","id","text","EditLink","relativePagePath","repositoryProp","repository","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","theme","description","keywords","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","BackToTopBtn","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"iPAEeA,ECGI,SAAC,GAAD,MAAGC,EAAH,EAAGA,MAAH,IAAUC,YAAV,MAAiB,GAAjB,SACjB,mBAAKC,UAAWC,IAAGC,cAAD,OAAgBC,YAAWJ,EAAKK,OAAhC,KAChB,mBAAKJ,UAAU,YACb,mBAAKA,UAAU,WACb,mBAAKA,UAAU,iBACb,kBAAIK,GAAG,aAAaL,UAAWM,QAC5BR,Q,wBCTES,ECIE,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,iBAA8BC,EAAqB,EAAjCC,WAGhBA,EAHiD,OAEnEC,KACEC,aAAgBF,WAHiD,EAmB3BD,GAAkBC,EAApDG,EAnB6D,EAmB7DA,QAASC,EAnBoD,EAmBpDA,aAEXC,EAAUF,EAAN,SArB2D,EAmBtCG,OAEUF,EAA/B,aAAwDN,EAElE,OAAOK,EACL,mBAAKb,UAAS,WAAaiB,OACzB,mBAAKjB,UAAU,WACb,iBAAGA,UAAWkB,OAAMH,KAAMA,GAA1B,8BAKF,M,oDCnCSI,E,gLCkBbC,OAAA,WAAU,IAAD,EACgBC,KAAKC,MAApBvB,EADD,EACCA,KAAMwB,EADP,EACOA,KACRC,EAAaD,EAChBE,MAAM,KACNC,OAAOC,SACPC,OAAO,GAAG,GAEPC,EAAW9B,EAAK+B,KAAI,SAAAC,GAAQ,IAAD,EACzBC,EAAeC,IAAQF,EAAK,CAAEG,OAAO,IACrCC,EAAWH,IAAiBR,EAC5BY,EAAkB,IAAIC,OAAUb,EAAd,SAClBT,EAAOQ,EAAKe,QAAQF,EAAiBJ,GAC3C,OACE,kBAAIO,IAAKR,EAAK/B,UAAWC,KAAE,OAAIuC,gBAAeL,EAAnB,GAA+BM,aACxD,YAAC,OAAD,CAAMzC,UAAWkB,OAAMwB,GAAE,GAAK3B,GAC3BgB,OAMT,OACE,mBAAK/B,UAAW2C,iBACd,mBAAK3C,UAAU,YACb,mBAAKA,UAAU,WACb,mBAAKA,UAAU,mCACb,uBACE,kBAAIA,UAAW4C,QAAOf,S,GAjCAgB,IAAMC,W,YCyD7BC,IA3DC,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAAY,EACJH,EAAlDI,mBADsD,MACxC,GADwC,EACpC5C,EAAgCwC,EAAhCxC,iBAAkB6C,EAAcL,EAAdK,UACpCtD,EAA8CqD,EAA9CrD,KAAMD,EAAwCsD,EAAxCtD,MAAOwD,EAAiCF,EAAjCE,MAAOC,EAA0BH,EAA1BG,YAAaC,EAAaJ,EAAbI,SAI/BC,EANoD,OAM5D9C,KAAQ8C,WAUJlC,EAAOkC,EACTP,EAASQ,SAASpB,QAAQmB,EAAY,IACtCP,EAASQ,SAYPlC,EATCzB,EAEHwB,EACGE,MAAM,KACNC,OAAOC,SACPC,OAAO,GAAG,IAAMK,IAAQlC,EAAK,GAAI,CAAEmC,OAAO,IAL7B,GAUpB,OACE,YAACyB,EAAA,EAAD,CACE5D,KAAMA,EACN6D,UAAU,EACVN,MAAOA,EACPO,UAAW/D,EACXgE,gBAAiBP,EACjBQ,aAAcP,EACdH,UAAWA,GAEX,YAAC,EAAD,CAAYvD,MAAOqD,EAAQ,YAACA,EAAD,MAAYrD,EAAOkE,MAAM,QAAQjE,KAAMA,IACjEA,GAAQ,YAAC,EAAD,CAAUwB,KAAMA,EAAMxB,KAAMA,EAAMyB,WAAYA,IACvD,YAACyC,EAAA,EAAD,CAAMC,QAAM,GACTjB,EACD,YAAC,EAAD,CAAUzC,iBAAkBA,KAE9B,YAAC2D,EAAA,EAAD,CACEnB,YAAaA,EACbE,SAAUA,EACV3B,KAAMA,EACNxB,KAAMA,EACNyB,WAAYA,IAEd,YAAC4C,EAAA,EAAD,S,+aC5DC,IAAMC,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGpD,E,oIACF,mBACD,OAAO,YAACiD,EAAD,KAAeD,EAAiBhD,EAAhC,CAAuCoD,WAAYA,EAAYC,QAAQ,cAG5E,mDACA,gCAAe,mBAAGC,WAAW,KAAQ,CACjC,KAAQ,uCADG,iBAAf,2DAGA,uCACA,iDACA,sBACE,kBAAIA,WAAW,MAAf,aAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,wFAEL,kDACA,sBACE,kBAAIA,WAAW,MAAf,aAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,2BAEL,sBACE,kBAAIA,WAAW,MAAf,sCAA2D,0BAAYA,WAAW,MAAvB,SAA3D,0CAAwJ,0BAAYA,WAAW,MAAvB,QAAxJ,gCAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,kGAGL,sBACE,kBAAIA,WAAW,MAAf,8CAAmE,0BAAYA,WAAW,MAAvB,UAAnE,2BAAkJ,0BAAYA,WAAW,MAAvB,WAAlJ,qBAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,sDAEL,iDACA,8FAA6E,mBAAGA,WAAW,KAAQ,CAC/F,KAAQ,yCADiE,iBAA7E,iBAGA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,gCAEL,gDACA,qCAAoB,mBAAGA,WAAW,KAAQ,CACtC,KAAQ,6CADQ,qBAApB,kEAGA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,0FAEL,yCAAwB,mBAAGA,WAAW,KAAQ,CAC1C,KAAQ,+DADY,gBAAxB,QAEkC,mBAAGA,WAAW,KAAQ,CACpD,KAAQ,mEADsB,aAFlC,KAKA,6BAAY,0BAAYA,WAAW,KAAvB,YAAZ,wEACA,2DACA,iHAAgG,0BAAYA,WAAW,KAAvB,kDAAhG,KACA,uGACA,gGACF,qBAAKA,WAAW,KAAQ,CAClB,IAAO,6CACP,IAAO,oBAEX,oFAAmE,0BAAYA,WAAW,KAAvB,2EAAnE,KACA,yCAAwB,0BAAYA,WAAW,KAAvB,yCAAxB,WAAqH,0BAAYA,WAAW,KAAvB,cAArH,UACA,oEACA,8CACA,wDAAuC,mBAAGA,WAAW,KAAQ,CACzD,KAAQ,mDAD2B,0BAAvC,+BAGA,sBACE,kBAAIA,WAAW,MAAK,kBAAIA,WAAW,MAAf,iIAEtB,yDAAwC,0BAAYA,WAAW,KAAvB,uBAAxC,KACA,gDACA,sBACE,kBAAIA,WAAW,MAAf,4CAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,gCAEL,sBACE,kBAAIA,WAAW,MAAf,+FAAoH,0BAAYA,WAAW,MAAvB,QAApH,gCAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,uGAGL,qEACA,iCAAgB,0BAAYA,WAAW,KAAvB,kBAAhB,QAAmF,0BAAYA,WAAW,KAAvB,sBAAnF,2BACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,+DAGL,sDAAqC,mBAAGA,WAAW,KAAQ,CACvD,KAAQ,+CADyB,uBAArC,QAEyC,mBAAGA,WAAW,KAAQ,CAC3D,KAAQ,mDAD6B,2BAFzC,wEAKA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,6EAIL,iCAAgB,mBAAGA,WAAW,KAAQ,CAClC,KAAQ,wCADI,gBAAhB,oCAGA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,4UAQL,6DACA,oFACA,sBACE,kBAAIA,WAAW,MAAf,kCAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,uFAEL,sBACE,kBAAIA,WAAW,MAAf,gBAAqC,0BAAYA,WAAW,MAAvB,iBAArC,uCAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,wHAGL,sBACE,kBAAIA,WAAW,MAAf,qBAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,4FAEL,qEACA,sBACE,kBAAIA,WAAW,MAAf,0CAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,sJAIL,sBACE,kBAAIA,WAAW,MAAf,gBAAqC,0BAAYA,WAAW,MAAvB,iBAArC,uCAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,wHAGL,sBACE,kBAAIA,WAAW,MAAf,qBAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,2FAEL,uDACA,mGAAkF,0BAAYA,WAAW,KAAvB,4BAAlF,iDACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,ojCAqBL,qCAAoB,mBAAGA,WAAW,KAAQ,CACtC,KAAQ,uCACP,0BAAYA,WAAW,KAAvB,gBAFL,8MAGA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,8BAEL,oCACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,gBAAoC,mBAAGA,WAAW,KAAQ,CACtD,KAAQ,uCACP,0BAAYA,WAAW,KAAvB,gBAFL,6DAE8H,0BAAYA,WAAW,KAAvB,oBAF9H,0CAEqO,kBAAIA,WAAW,KAAf,qCAFrO,eAIF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,mDAAuE,mBAAGA,WAAW,KAAQ,CACzF,KAAQ,iDACP,0BAAYA,WAAW,KAAvB,0BAFL,+LAE0Q,mBAAGA,WAAW,KAAQ,CAC5R,KAAQ,iDACP,0BAAYA,WAAW,KAAvB,4BAEP,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,wDAGJ,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,yCAEL,wEACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,6rDAqBL,mDACA,iCAAgB,mBAAGA,WAAW,KAAQ,CAClC,KAAQ,sCACP,0BAAYA,WAAW,KAAvB,eAFL,kEAGA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,6BAEL,yDACA,0GAAyF,0BAAYA,WAAW,KAAvB,YAAzF,8BACA,iEACF,0BAAYA,WAAW,KAAvB,mHADE,KAEA,2CAA0B,0BAAYA,WAAW,KAAvB,SAA1B,sBAAkG,0BAAYA,WAAW,KAAvB,YAAlG,kBACA,mCACA,0CACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,0IAKL,mEACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,iCAEL,uCACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,mXASL,kEACA,sBACE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,uFADQ,uDAQ1BH,EAAWI,gBAAiB,G","file":"component---src-pages-automation-install-bai-index-mdx-5637a6c9f8b05d927cad.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { pageHeader, withTabs, text } from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, tabs = [] }) => (\n  <div className={cx(pageHeader, { [withTabs]: tabs.length })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const currentTabRegex = new RegExp(`${currentTab}(?!-)`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport BackToTopBtn from '../components/BackToTopBtn';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const { tabs, title, theme, description, keywords } = frontmatter;\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug\n        .split('/')\n        .filter(Boolean)\n        .slice(-1)[0] || slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}\n    >\n      <PageHeader title={Title ? <Title /> : title} label=\"label\" tabs={tabs} />\n      {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <BackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/ibm-cloud-architecture/cloudpak8s/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h3>{`Log in to you OCP cluster`}</h3>\n    <p>{`See the `}<a parentName=\"p\" {...{\n        \"href\": \"/content/automation/pre-requisites\"\n      }}>{`Prerequisites`}</a>{` chapter for details on logging in to your OCP cluster.`}</p>\n    <h2>{`Install Kafka`}</h2>\n    <h3>{`Add the Helm repository`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Execute:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`helm repo add incubator http://storage.googleapis.com/kubernetes-charts-incubator\n`}</code></pre>\n    <h3>{`Create the Kafka project`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Execute:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`oc new-project kafka\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Make sure you are working from the `}<inlineCode parentName=\"li\">{`kafka`}</inlineCode>{` project, then grant the tiller server `}<inlineCode parentName=\"li\">{`edit`}</inlineCode>{` access to current project:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`oc project kafka\noc adm policy add-role-to-user edit \"system:serviceaccount:tiller:tiller\"\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Add the Security Context Constraints (CSS) `}<inlineCode parentName=\"li\">{`anyuid`}</inlineCode>{` to the Service Account `}<inlineCode parentName=\"li\">{`default`}</inlineCode>{` of the project:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`oc adm policy add-scc-to-user anyuid -z default\n`}</code></pre>\n    <h3>{`Create PVs if necessary`}</h3>\n    <p>{`If your cluster does not support dynamic persistence volume, download `}<a parentName=\"p\" {...{\n        \"href\": \"/assets/automation/bai/kafka-pv.yaml\"\n      }}>{`kafka-pv.yaml`}</a>{` and execute:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc apply -f kafka-pv.yaml\n`}</code></pre>\n    <h3>{`Install the Helm chart`}</h3>\n    <p>{`Download the `}<a parentName=\"p\" {...{\n        \"href\": \"/assets/automation/bai/kafka-values.yaml\"\n      }}>{`kafka-values.yaml`}</a>{` file to your working directory and run the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`helm install incubator/kafka --name my-kafka --namespace kafka -f kafka-values.yaml\n`}</code></pre>\n    <p>{`This will deploy `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/helm/charts/tree/master/incubator/kafka\"\n      }}>{`Apache Kafka`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/helm/charts/tree/master/incubator/zookeeper\"\n      }}>{`Zookeeper`}</a>{`.`}</p>\n    <p>{`Keep `}<inlineCode parentName=\"p\">{`my-kafka`}</inlineCode>{` as a release name because the rest of the installation assumes it. `}</p>\n    <h3>{`Set-up the Kafka bootstrap server`}</h3>\n    <p>{`If access is from inside the OpenShift cluster environment, then the bootstrap server is `}<inlineCode parentName=\"p\">{`my-kafka-headless.kafka.svc.cluster.local:9092`}</inlineCode>{`.`}</p>\n    <p>{`If access is from an external system, you need to perform the following steps:`}</p>\n    <p>{`1 - Retrieve the OpenShift ingress address with the following command:\n`}<img parentName=\"p\" {...{\n        \"src\": \"/assets/automation//images/rhos-kafka1.png\",\n        \"alt\": \"Kafka ingress\"\n      }}></img></p>\n    <p>{`2 - Use this ingress address to set the bootstrap server to `}<inlineCode parentName=\"p\">{`{rhos-ingress-ip}:31090,{rhos-ingress-ip}:31091,{rhos-ingress-ip}:31092`}</inlineCode>{`.`}</p>\n    <p>{`3 - Add the line `}<inlineCode parentName=\"p\">{`{rhos-ingress-ip} kafka.cluster.local`}</inlineCode>{` to the `}<inlineCode parentName=\"p\">{`/etc/hosts`}</inlineCode>{` file.`}</p>\n    <h2>{`Install Business Automation Insights (BAI)`}</h2>\n    <h3>{`Download the BAI PPA`}</h3>\n    <p>{`Download the following PPA from `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.ibm.com/software/passportadvantage\"\n      }}>{`IBM Passport Advantage`}</a>{` to your working-directory:`}</p>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`IBM Cloud Pak for Automation v19.0.1 - Business Operation Insights for Certified Kubernetes Multiplatform English (CC222EN)`}</em></li>\n    </ul>\n    <p>{`The downloaded archive should be `}<inlineCode parentName=\"p\">{`ICP4A19.0.1-bai.tgz`}</inlineCode>{`.`}</p>\n    <h3>{`Create the BAI project`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Create a new OpenShift project for BAI:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`oc new-project baiproject\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Make sure you are working from your newly created BAI project, then grant the tiller server `}<inlineCode parentName=\"li\">{`edit`}</inlineCode>{` access to current project:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`oc project baiproject\noc adm policy add-role-to-user edit \"system:serviceaccount:tiller:tiller\"\n`}</code></pre>\n    <h3>{`Create a ServiceAccount and update the SCCs`}</h3>\n    <p>{`Check if `}<inlineCode parentName=\"p\">{`ibm-anyuid-scc`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`ibm-privileged-scc`}</inlineCode>{` exist in your cluster:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc get scc ibm-anyuid-scc\noc get scc ibm-privileged-scc\n`}</code></pre>\n    <p>{`If they don’t exist, download `}<a parentName=\"p\" {...{\n        \"href\": \"/assets/automation/bai/ibm-anyuid-scc.yaml\"\n      }}>{`ibm-anyuid-scc.yaml`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"/assets/automation/bai/ibm-privileged-scc.yaml\"\n      }}>{`ibm-privileged-scc.yaml`}</a>{` files to your working directory and execute the following commands:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc apply -f ibm-anyuid-scc.yaml\noc apply -f ibm-privileged-scc.yaml\n\n`}</code></pre>\n    <p>{`Download `}<a parentName=\"p\" {...{\n        \"href\": \"/assets/automation/bai/bai-psp.yaml\"\n      }}>{`bai-psp.yaml`}</a>{` file to your working directory.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc apply -f bai-psp.yaml\n\noc adm policy add-scc-to-user ibm-privileged-scc -z bai-prod-release-bai-psp-sa\noc adm policy add-scc-to-user ibm-anyuid-scc -z bai-prod-release-bai-psp-sa\n\noc adm policy add-scc-to-group ibm-anyuid-scc system:authenticated\noc adm policy add-scc-to-user ibm-privileged-scc system:authenticated\n`}</code></pre>\n    <h3>{`Push the BAI images to the registry`}</h3>\n    <p>{`If you are installing BAI on IBM Cloud managed OCP cluster:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Login to the Docker registry:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`docker login -u $(oc whoami) -p $(oc whoami -t) docker-registry.default.svc:5000\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Download the `}<inlineCode parentName=\"li\">{`loadimages.sh`}</inlineCode>{` script to your working directory:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`wget https://raw.githubusercontent.com/icp4a/cert-kubernetes/19.0.1/scripts/loadimages.sh\nchmod +x loadimages.sh\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Load the images:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`./loadimages.sh -p ICP4A19.0.1-bai.tgz -r docker-registry.default.svc:5000/baiproject\n`}</code></pre>\n    <p>{`If you are installing BAI on an on-prem OCP:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Find the url of the cluster registry:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`oc -n default get route\n# search for route to docker-registry\nsudo docker login -u $(oc whoami) -p $(oc whoami -t) <route_to_docker_registry>\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Download the `}<inlineCode parentName=\"li\">{`loadimages.sh`}</inlineCode>{` script to your working directory:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`wget https://raw.githubusercontent.com/icp4a/cert-kubernetes/19.0.1/scripts/loadimages.sh\nchmod +x loadimages.sh\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Load the images:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo ./loadimages.sh -p ICP4A19.0.1-bai.tgz -r <route_to_docker_registry>/baiproject\n`}</code></pre>\n    <h3>{`Set up the persistent volumes`}</h3>\n    <p>{`Run the following commands to create the required PV folders in NFS, where `}<inlineCode parentName=\"p\">{`/data/persistentvolumes/`}</inlineCode>{` is the mounted directory of your NFS server:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo mkdir -p /data/persistentvolumes/bai/ibm-bai-pv\nsudo chown 9999:9999 /data/persistentvolumes/bai/ibm-bai-pv\nsudo chmod 770 /data/persistentvolumes/bai/ibm-bai-pv\n\nmkdir -p /data/persistentvolumes/bai/ibm-bai-ek-pv-0\nmkdir -p /data/persistentvolumes/bai/ibm-bai-ek-pv-1\nmkdir -p /data/persistentvolumes/bai/ibm-bai-ek-pv-2\nmkdir -p /data/persistentvolumes/bai/ibm-bai-ek-pv-3\nsudo chown 1000:1000 /data/persistentvolumes/bai/ibm-bai-ek-pv-0\nsudo chown 1000:1000 /data/persistentvolumes/bai/ibm-bai-ek-pv-1\nsudo chown 1000:1000 /data/persistentvolumes/bai/ibm-bai-ek-pv-2\nsudo chown 1000:1000 /data/persistentvolumes/bai/ibm-bai-ek-pv-3\nsudo chmod 770 /data/persistentvolumes/bai/ibm-bai-ek-pv-0\nsudo chmod 770 /data/persistentvolumes/bai/ibm-bai-ek-pv-1\nsudo chmod 770 /data/persistentvolumes/bai/ibm-bai-ek-pv-2\nsudo chmod 770 /data/persistentvolumes/bai/ibm-bai-ek-pv-3\n\nmkdir /data/persistentvolumes/bai/es-snapshots-pv\nsudo chown 1000:1000 /data/persistentvolumes/bai/es-snapshots-pv\nsudo chmod 770 /data/persistentvolumes/bai/es-snapshots-pv\n`}</code></pre>\n    <p>{`Download the `}<a parentName=\"p\" {...{\n        \"href\": \"/assets/automation/bai/bai-pv.yaml\"\n      }}><inlineCode parentName=\"a\">{`bai-pv.yaml`}</inlineCode></a>{` PV configuration file to your working directory. Edit the file and replace the IP address of the NFS server by the name or the IP address of your server. Modify the path of the directory if necessary. `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc apply -f bai-pv.yaml\n`}</code></pre>\n    <h3>{`Deploy BAI`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Download the `}<a parentName=\"p\" {...{\n            \"href\": \"/assets/automation/bai/values.yaml\"\n          }}><inlineCode parentName=\"a\">{`values.yaml`}</inlineCode></a>{` file to your working directory. Make sure that the Kafka `}<inlineCode parentName=\"p\">{`bootstrapServers`}</inlineCode>{` name corresponds to the name from the `}<em parentName=\"p\">{`Set-up the Kafka bootstrap server`}</em>{` section. `}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`To update the operator configuration, copy this `}<a parentName=\"p\" {...{\n            \"href\": \"/assets/automation/bai/my_ibm_cp4a_cr_3.yaml\"\n          }}><inlineCode parentName=\"a\">{`my_ibm_cp4a_cr_3.yaml`}</inlineCode></a>{` template file in your working directory and update it as needed. You can highlight the BAI configuration sections that need your attention by doing a diff with the template file found in `}<a parentName=\"p\" {...{\n            \"href\": \"/assets/automation/bas/my_ibm_cp4a_cr_2.yaml\"\n          }}><inlineCode parentName=\"a\">{`my_ibm_cp4a_cr_2.yaml`}</inlineCode></a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Apply the updated custom resource definition file:`}</p>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`oc apply -f my_ibm_icp4a_cr_3.yaml\n`}</code></pre>\n    <p>{`You should see the following new pods deployed:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`NAME                                              READY   STATUS      RESTARTS   AGE\ncp4a-prod-bai-admin-d877c8b66-8xzs5               1/1     Running     0          15h\ncp4a-prod-bai-bawadv-97flq                        0/1     Completed   0          15h\ncp4a-prod-bai-bpmn-bvrtx                          0/1     Completed   0          15h\ncp4a-prod-bai-content-nqgl2                       0/1     Completed   0          15h\ncp4a-prod-bai-flink-jobmanager-5844df9685-2dkz5   1/1     Running     0          15h\ncp4a-prod-bai-flink-taskmanager-0                 1/1     Running     3          15h\ncp4a-prod-bai-flink-taskmanager-1                 1/1     Running     3          15h\ncp4a-prod-bai-flink-taskmanager-2                 1/1     Running     3          15h\ncp4a-prod-bai-flink-taskmanager-3                 1/1     Running     0          15h\ncp4a-prod-bai-flink-taskmanager-4                 1/1     Running     3          15h\ncp4a-prod-bai-flink-zk-0                          1/1     Running     0          15h\ncp4a-prod-bai-icm-pc2vw                           0/1     Completed   0          15h\ncp4a-prod-bai-odm-94dch                           0/1     Completed   0          15h\ncp4a-prod-bai-setup-wphkf                         0/1     Completed   0          15h\ncp4a-prod-ibm-dba-ek-client-547dfdbd94-5jdxl      1/1     Running     0          15h\ncp4a-prod-ibm-dba-ek-data-0                       1/1     Running     0          15h\ncp4a-prod-ibm-dba-ek-kibana-7cb766fcd7-5bpl8      1/1     Running     0          15h\ncp4a-prod-ibm-dba-ek-master-0                     1/1     Running     0          15h\ncp4a-prod-ibm-dba-ek-security-config-5hj2p        0/1     Completed   0          15h\n`}</code></pre>\n    <h3>{`Expose the Kibana service`}</h3>\n    <p>{`Download `}<a parentName=\"p\" {...{\n        \"href\": \"/assets/automation/bai/route.yaml\"\n      }}><inlineCode parentName=\"a\">{`route.yaml`}</inlineCode></a>{` file to your working directory and run the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc apply -f route.yaml\n`}</code></pre>\n    <h3>{`Accessing the Kibana dashboards`}</h3>\n    <p>{`You can find the URL of Kibana in the Application Console of your cluster, in the `}<inlineCode parentName=\"p\">{`Services`}</inlineCode>{` tab of your BAI project. `}</p>\n    <p>{`The URL should have the following form:\n`}<inlineCode parentName=\"p\">{`https://bai-prod-release-ibm-dba-ek-kibana-baiproject.<your-cluster-ID>.<cloud-zone>.containers.appdomain.cloud`}</inlineCode>{`.`}</p>\n    <p>{`The credential are `}<inlineCode parentName=\"p\">{`admin`}</inlineCode>{` for user name and `}<inlineCode parentName=\"p\">{`passw0rd`}</inlineCode>{` for password.`}</p>\n    <h2>{`Uninstall`}</h2>\n    <h3>{`Uninstall Kafka:`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`helm delete my-kafka  --purge\noc delete pvc datadir-my-kafka-0\noc delete pvc datadir-my-kafka-1\noc delete pvc datadir-my-kafka-2\n`}</code></pre>\n    <p>{`If you created your PVs manually, execute:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc delete -f kafka-pv.yaml\n`}</code></pre>\n    <h3>{`Uninstall BAI`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`helm delete bai-prod-release --purge\noc delete pvc data-bai-prod-release-ibm-dba-ek-data-0\noc delete pvc data-bai-prod-release-ibm-dba-ek-data-1\noc delete pvc data-bai-prod-release-ibm-dba-ek-data-2\noc delete pvc data-bai-prod-release-ibm-dba-ek-data-3\noc delete pvc data-bai-prod-release-ibm-dba-ek-master-0\noc delete -f bai-pv.yaml\noc delete -f route.yaml\n`}</code></pre>\n    <h2>{`Other useful references to documentation`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.ibm.com/dba/cert-kubernetes/blob/19.0.1/BAI/platform/README_ROKS.md\"\n        }}>{`BAI install on on Red Hat OpenShift on IBM Cloud`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}